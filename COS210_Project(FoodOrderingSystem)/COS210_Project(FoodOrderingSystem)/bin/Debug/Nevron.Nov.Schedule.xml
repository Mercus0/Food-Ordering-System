<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nevron.Nov.Schedule</name>
    </assembly>
    <members>
        <member name="T:Nevron.Nov.Schedule.Commands.NAddAppointmentCommandAction">
            <summary>
            Creates and adds a new appointment to the schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NAddAppointmentCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NAddAppointmentCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NAddAppointmentCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action should be enabled.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NAddAppointmentCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NAddAppointmentCommandAction.CreateAppointmentForGridCell(Nevron.Nov.Schedule.NScheduleGridCell)">
            <summary>
            Creates an appointment for the given schedule grid cell.
            </summary>
            <param name="gridCell"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NAddAppointmentCommandAction.NAddAppointmentCommandActionSchema">
            <summary>
            Schema associated with NAddAppointmentCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NCategoryCommandAction">
            <summary>
            Categorizes one or more appointments.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NCategoryCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NCategoryCommandAction.GetCommand">
            <summary>
            Gets the command associated with this action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NCategoryCommandAction.GetTagCollection(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the tag collection of the given schedule this command action should operate on.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NCategoryCommandAction.SetTag(Nevron.Nov.Schedule.NAppointmentBase,System.String)">
            <summary>
            Sets the appropriate tag of the given appointment to the specified value.
            </summary>
            <param name="appointment"></param>
            <param name="tagName"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NCategoryCommandAction.NCategoryCommandActionSchema">
            <summary>
            Schema associated with NCategoryCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NDeleteAppointmentsCommandAction">
            <summary>
            Deletes the selected appointments.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NDeleteAppointmentsCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NDeleteAppointmentsCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NDeleteAppointmentsCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action should be enabled.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NDeleteAppointmentsCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes this command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NDeleteAppointmentsCommandAction.NDeleteAppointmentsCommandActionSchema">
            <summary>
            Schema associated with NDeleteAppointmentsCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NEditAppointmentCommandAction">
            <summary>
            Shows a dialog for editing the properties of an appointment.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NEditAppointmentCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NEditAppointmentCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NEditAppointmentCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action should be enabled.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NEditAppointmentCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NEditAppointmentCommandAction.NEditAppointmentCommandActionSchema">
            <summary>
            Schema associated with NEditAppointmentCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NImportAppointmentsCommandAction">
            <summary>
            Imports appointments from another schedule document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NImportAppointmentsCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NImportAppointmentsCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NImportAppointmentsCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes this command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NImportAppointmentsCommandAction.NImportAppointmentsCommandActionSchema">
            <summary>
            Schema associated with NImportAppointmentsCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NTagCommandAction`1">
            <summary>
            Base class for all command actions that modify a tag of one or more appointments.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTagCommandAction`1.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTagCommandAction`1.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Override to return true.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTagCommandAction`1.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTagCommandAction`1.OnUpdateCommandSource(Nevron.Nov.Dom.NNode,Nevron.Nov.UI.NUpdateCommandSourceEventArgs)">
            <summary>
            Called by the commander when an update command source event for this action
            command has been received by it.
            </summary>
            <param name="target"></param>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTagCommandAction`1.GetTagCollection(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the tag collection of the given schedule this command action should operate on.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTagCommandAction`1.SetTag(Nevron.Nov.Schedule.NAppointmentBase,System.String)">
            <summary>
            Sets the appropriate tag of the given appointment to the specified value.
            </summary>
            <param name="appointment"></param>
            <param name="tagName"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NTagCommandAction`1.NTagCommandActionSchema">
            <summary>
            Schema associated with NTagCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NTimeMarkerCommandAction">
            <summary>
            Applies a time marker to one or more appointments.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTimeMarkerCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTimeMarkerCommandAction.GetCommand">
            <summary>
            Gets the command associated with this action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTimeMarkerCommandAction.GetTagCollection(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the tag collection of the given schedule this command action should operate on.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NTimeMarkerCommandAction.SetTag(Nevron.Nov.Schedule.NAppointmentBase,System.String)">
            <summary>
            Sets the appropriate tag of the given appointment to the specified value.
            </summary>
            <param name="appointment"></param>
            <param name="tagName"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NTimeMarkerCommandAction.NTimeMarkerCommandActionSchema">
            <summary>
            Schema associated with NTimeMarkerCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NDocumentInfoCommandAction">
            <summary>
            Edits the document information of a schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NDocumentInfoCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NDocumentInfoCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NDocumentInfoCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action should be enabled.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NDocumentInfoCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NDocumentInfoCommandAction.OnDialogClosed(Nevron.Nov.Dom.NEventArgs)">
            <summary>
            Called when the dialog of this command action has been closed.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NDocumentInfoCommandAction.NDocumentInfoCommandActionSchema">
            <summary>
            Schema associated with NDocumentInfoCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NExportToPdfCommandAction">
            <summary>
            Exports the current date range of a schedule to PDF.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToPdfCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToPdfCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToPdfCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action should be enabled.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToPdfCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NExportToPdfCommandAction.NExportToPdfCommandActionSchema">
            <summary>
            Schema associated with NExportToPdfCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NExportToRasterImageCommandAction">
            <summary>
            Exports the current date range of a schedule to an image.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToRasterImageCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToRasterImageCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToRasterImageCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action should be enabled.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToRasterImageCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NExportToRasterImageCommandAction.NExportToImageCommandActionSchema">
            <summary>
            Schema associated with NExportToImageCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NExportToVectorImageCommandAction">
            <summary>
            Exports the schedule to a vector image.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToVectorImageCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToVectorImageCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToVectorImageCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action should be enabled.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NExportToVectorImageCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NExportToVectorImageCommandAction.NExportToVectorImageCommandActionSchema">
            <summary>
            Schema associated with NExportToVectorImageCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NNewCommandAction">
            <summary>
            Creates a new schedule document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NNewCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Commands.NNewCommandAction.IsEditAction">
            <summary>
            Returns whether this is an edit action (i.e. it modifies the control content).
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NNewCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NNewCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes this command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NNewCommandAction.NNewCommandActionSchema">
            <summary>
            Schema associated with NNewCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NOpenCommandAction">
            <summary>
            Opens a schedule document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NOpenCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Commands.NOpenCommandAction.IsEditAction">
            <summary>
            Returns whether this is an edit action (i.e. it modifies the control content).
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NOpenCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NOpenCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes this command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NOpenCommandAction.NOpenCommandActionSchema">
            <summary>
            Schema associated with NOpenCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NPrintCommandAction">
            <summary>
            Prints a drawing document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NPrintCommandAction.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Commands.NPrintCommandAction.IsEditAction">
            <summary>
            Returns whether this is an edit action (i.e. it modifies the control content).
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NPrintCommandAction.GetCommand">
            <summary>
            Gets the command associated with this action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NPrintCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NPrintCommandAction.NPrintCommandActionSchema">
            <summary>
            Schema associated with NPrintCommandAction 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NSaveAsCommandAction">
            <summary>
            Shows a "Save As" dialog and saves a schedule document to a file.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NSaveAsCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Commands.NSaveAsCommandAction.IsEditAction">
            <summary>
            Returns whether this is an edit action (i.e. it modifies the control content).
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NSaveAsCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NSaveAsCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NSaveAsCommandAction.NSaveAsCommandActionSchema">
            <summary>
            Schema associated with NSaveAsCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NSaveCommandAction">
            <summary>
            Saves a schedule document to a file.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NSaveCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NSaveCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NSaveCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NSaveCommandAction.NSaveCommandActionSchema">
            <summary>
            Schema associated with NSaveCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NGoToNextRangeCommandAction">
            <summary>
            Moves the schedule to its next date range.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGoToNextRangeCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGoToNextRangeCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGoToNextRangeCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NGoToNextRangeCommandAction.NGoToNextRangeCommandActionSchema">
            <summary>
            Schema associated with NGoToNextRangeCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NGoToPreviousRangeCommandAction">
            <summary>
            Moves the schedule to its previous date range.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGoToPreviousRangeCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGoToPreviousRangeCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGoToPreviousRangeCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes this command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NGoToPreviousRangeCommandAction.NGoToPreviousRangeCommandActionSchema">
            <summary>
            Schema associated with NGoToPreviousRangeCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NGoToTodayCommandAction">
            <summary>
            Moves the schedule to today.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGoToTodayCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGoToTodayCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGoToTodayCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes this command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NGoToTodayCommandAction.NGoToTodayCommandActionSchema">
            <summary>
            Schema associated with NGoToTodayCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NScheduleCommandAction">
            <summary>
            Base class for schedule command actions.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NScheduleCommandAction.NScheduleCommandActionSchema">
            <summary>
            Schema associated with NScheduleCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NScheduleToggleCommandAction">
            <summary>
            Base class for all schedule toggle command actions.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleToggleCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleToggleCommandAction.IsToggleAction">
            <summary>
            Overriden to return true.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NScheduleToggleCommandAction.NScheduleToggleCommandActionSchema">
            <summary>
            Schema associated with NScheduleToggleCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NGroupingsCommandAction">
            <summary>
            Edits the groupings of the currently active view mode.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGroupingsCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGroupingsCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGroupingsCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action is enabled.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGroupingsCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NGroupingsCommandAction.OnEditorWindowClosed(Nevron.Nov.Dom.NEventArgs)">
            <summary>
            Called when the editor window has been closed.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NGroupingsCommandAction.NGroupingsCommandActionSchema">
            <summary>
            Schema associated with NGroupingsCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NScheduleChildSettingsCommandAction">
            <summary>
            Shows a settings dialog for a schedule child, for example - time ruler, header, grid.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleChildSettingsCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleChildSettingsCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleChildSettingsCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action is enabled.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleChildSettingsCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes this command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleChildSettingsCommandAction.OnEditorWindowClosed(Nevron.Nov.Dom.NEventArgs)">
            <summary>
            Called when the editor window has been closed.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NScheduleChildSettingsCommandAction.NScheduleChildSettingsCommandActionSchema">
            <summary>
            Schema associated with NScheduleChildSettingsCommandAction.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NScheduleChildSettingsCommandAction.ChildProperty">
            <summary>
            Reference to the Child property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NScheduleInteractivityCommandAction">
            <summary>
            Configures the interactivity of the schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleInteractivityCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleInteractivityCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleInteractivityCommandAction.OnUpdateCommandSource(Nevron.Nov.Dom.NNode,Nevron.Nov.UI.NUpdateCommandSourceEventArgs)">
            <summary>
            Called by the commander when an update command source event for this action command
            has been received by it.
            </summary>
            <param name="target"></param>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NScheduleInteractivityCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NScheduleInteractivityCommandAction.NScheduleInteractivityCommandActionSchema">
            <summary>
            Schema associated with NScheduleInteractivityCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NToggleOrientationCommandAction">
            <summary>
            Toggles the orientation of a schedule view.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleOrientationCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleOrientationCommandAction.#ctor(Nevron.Nov.Layout.ENHVOrientation)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="orientation"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.Commands.NToggleOrientationCommandAction.Orientation">
            <summary>
            Gets/Sets the value of the Orientation property.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleOrientationCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleOrientationCommandAction.IsChecked(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this command action should be checked for the given target node.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleOrientationCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NToggleOrientationCommandAction.NToggleOrientationCommandActionSchema">
            <summary>
            Schema associated with NToggleOrientationCommandAction.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NToggleOrientationCommandAction.OrientationProperty">
            <summary>
            Reference to the Orientation property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NToggleViewModeCommandAction">
            <summary>
            Toggles the view mode of a schedule view.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleViewModeCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleViewModeCommandAction.#ctor(Nevron.Nov.Schedule.ENScheduleViewMode)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="viewMode"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.Commands.NToggleViewModeCommandAction.ViewMode">
            <summary>
            Gets/Sets the value of the ViewMode property.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleViewModeCommandAction.GetCommand">
            <summary>
            Gets the command associated with this command action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleViewModeCommandAction.IsChecked(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether this toggle command action should be checked.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleViewModeCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes this command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NToggleViewModeCommandAction.NToggleViewModeCommandActionSchema">
            <summary>
            Schema associated with NToggleViewModeCommandAction.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NToggleViewModeCommandAction.ViewModeProperty">
            <summary>
            Reference to the ViewMode property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction">
            <summary>
            Toggles the Zoom Mode of the schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction.#ctor(Nevron.Nov.UI.ENZoomMode)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="ZoomMode"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction.ZoomMode">
            <summary>
            Gets or sets the zoom mode of this command.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction.GetCommand">
            <summary>
            Gets the command associated with this action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction.IsChecked(Nevron.Nov.Dom.NNode)">
            <summary>
            Returns whether the action is checked.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction.IsEnabled(Nevron.Nov.Dom.NNode)">
            <summary>
            Override to return true.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes this command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction.NToggleZoomModeCommandActionSchema">
            <summary>
            Schema associated with NToggleZoomModeCommandAction.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NToggleZoomModeCommandAction.ZoomModeProperty">
            <summary>
            Reference to the ZoomMode property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Commands.NZoomToPercentCommandAction">
            <summary>
            The zoom to percent command action.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NZoomToPercentCommandAction.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NZoomToPercentCommandAction.GetCommand">
            <summary>
            Gets the command associated with this action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NZoomToPercentCommandAction.Execute(Nevron.Nov.Dom.NNode,System.Object)">
            <summary>
            Executes the command action.
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.Commands.NZoomToPercentCommandAction.OnUpdateCommandSource(Nevron.Nov.Dom.NNode,Nevron.Nov.UI.NUpdateCommandSourceEventArgs)">
            <summary>
            Called by the commander when an update command source event for this action command has been received by it.
            </summary>
            <param name="target"></param>
            <param name="args"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Commands.NZoomToPercentCommandAction.NZoomToPercentCommandActionSchema">
            <summary>
            Schema associated with NZoomToPercentCommandAction.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointment">
            <summary>
            Represents a root level appointment, which is an appointment that may have a recurrence
            rule defined and child appointments generated as a result of this rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointment.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointment.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="subject">The subject of the appointment.</param>
            <param name="start">The start time.</param>
            <param name="end">The end time.</param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointment.Occurrences">
            <summary>
            Gets the occurrences of this appointment (if any), for example the appointments
            generated based on the recurrence rule of this appointment. Do not add appointments
            to this collection, it is automatically maintained by Nevron.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointment.RecurrenceRule">
            <summary>
            Gets/Sets the recurrence rule of this appointment.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointment.AddTime(System.TimeSpan)">
            <summary>
            Adds the given time span to the appointment's start and end time.
            </summary>
            <param name="timeSpan"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointment.OnRegistered">
            <summary>
            Called after the appointment is registered in a document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointment.OnStartChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Start property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointment.OnEndChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the End property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointment.OnRecurrenceRuleChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the RecurrenceRule property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointment.NAppointmentSchema">
            <summary>
            Schema associated with NAppointment.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointment.OccurrencesChild">
            <summary>
            Reference to the Occurrences child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointment.RecurrenceRuleProperty">
            <summary>
            Reference to the RecurrenceRule property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointment.NAppointmentDesigner">
            <summary>
            Designer for NAppointment instances.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointment.NAppointmentDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentBase">
            <summary>
            Base class for appointments.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="subject">The subject of the appointment.</param>
            <param name="start">The start time.</param>
            <param name="end">The end time.</param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.Subject">
            <summary>
            Gets/Sets the subject of the appointment.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.Description">
            <summary>
            Gets/Sets the description of the appointnment.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.Category">
            <summary>
            Gets/Sets the category of this appointment.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.TimeMarker">
            <summary>
            Gets/Sets the time marker of this appointment.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.Start">
            <summary>
            Gets/Sets the start date and time of the appointment.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.End">
            <summary>
            Gets/Sets the end date and time of the appointment.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.Duration">
            <summary>
            Gets the duration of this appointment.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.Notification">
            <summary>
            Gets/Sets the time period before the start of the appointment at which to show
            a notification message. By default set to TimeSpan.MinValue, which means that
            notifications for the appointment won't be shown.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.Dismissed">
            <summary>
            Gets/Sets whether the appointment has been dismissed. Dismissed appointments are not
            shown in the notification dialog. This property is automatically set to true if the
            user dismisses the appointment from the notification dialog.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.StartTimeZone">
            <summary>
            Gets/Sets the time zone of the start time. By default set to the local time zone.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.EndTimeZone">
            <summary>
            Gets/Sets the time zone of the end time. By default set to the local time zone.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.Groups">
            <summary>
            Gets/Sets the groups this appointment is associated with.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.IsHighlighted">
            <summary>
            Gets whether this appointment is highlighted.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.IsSelected">
            <summary>
            Gets whether this appointment is selected in its owner schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.StartInUtc">
            <summary>
            Gets the start of the appointment in Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.EndInUtc">
            <summary>
            Gets the end of the appointment in Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentBase.IsAllDay">
            <summary>
            Gets whether this is an appointment which lasts all day.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.CompareTo(System.Object)">
            <summary>
            Compares this appointment to the given one by start and end time.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.CompareTo(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Compares this appointment to the given one by start and end time.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.AppendContextMenuItems(Nevron.Nov.UI.NMenu,System.Boolean)">
            <summary>
            Appends context menu items to the given menu.
            </summary>
            <param name="menu"></param>
            <param name="readOnly"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.ToString">
            <summary>
            Gets the string representation of this appointment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.ShouldSerialize">
            <summary>
            Gets whether this appointment should serialize or not.
            </summary>
            <remarks>
            An appointment should serialize if it is not created by a recursive rule or it is,
            but has a local value set to any of its properties except for the start and end times
            and the effective category and time marker.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.AddTime(System.TimeSpan)">
            <summary>
            Adds the given time span to the appointment's start and end time.
            </summary>
            <param name="timeSpan"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.CreateEditDialog">
            <summary>
            Creates a dialog which edits the properties of this appointment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.GetStartInSchedule">
            <summary>
            Gets the start time of this appointment into the schedule time zone.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.GetEndInSchedule">
            <summary>
            Gets the end time of this appointment into the schedule time zone.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.IntersectsWith(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Checks whether this appointment intersects with the given one.
            </summary>
            <param name="appointment"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.IntersectsWith(System.DateTime,System.DateTime)">
            <summary>
            Checks whether this appointment intersects with the given period.
            </summary>
            <param name="startInUtc">The start of the period.</param>
            <param name="endInUtc">The end of the period.</param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.OnSubjectChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Subject property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.OnDescriptionChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Description property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.OnCategoryChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Category property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.OnTimeMarkerChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the TimeMarker property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.OnStartTimeZoneChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the StartTimeZone property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.OnEndTimeZoneChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the EndTimeZone property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.OnStartChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Start property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.OnEndChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the End property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.OnGroupsChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Groups property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.CreateWidget">
            <summary>
            Creates an appointment widget for this appointment.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.NAppointmentBaseSchema">
            <summary>
            Schema associated with NAppointmentBase.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.SubjectProperty">
            <summary>
            Reference to the Subject property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.DescriptionProperty">
            <summary>
            Reference to the Description property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.CategoryProperty">
            <summary>
            Reference to the Category property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.TimeMarkerProperty">
            <summary>
            Reference to the TimeMarker property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.StartProperty">
            <summary>
            Reference to the Start property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.EndProperty">
            <summary>
            Reference to the End property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.NotificationProperty">
            <summary>
            Reference to the Notification property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.StartTimeZoneProperty">
            <summary>
            Reference to the StartTimeZone property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.EndTimeZoneProperty">
            <summary>
            Reference to the EndTimeZone property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.GroupsProperty">
            <summary>
            Reference to the Groups property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentBase.DismissedProperty">
            <summary>
            Reference to the Dismissed property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentBase.NAppointmentBaseDesigner">
            <summary>
            A designer for NAppointmentBase instances.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.NAppointmentBaseDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.NAppointmentBaseDesigner.GetChildrenBrowsable(Nevron.Nov.Dom.NNode)">
            <summary>
            Gets whether the children of the given node are browsable or not.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.NAppointmentBaseDesigner.ConfigureGeneralCategory">
            <summary>
            Configures the "General" category.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentBase.NAppointmentBaseDesigner.ConfigureRangeCategory">
            <summary>
            Configures the "Range" category.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentCollection">
            <summary>
            A collection of appointments.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentCollection.GetAppointmentsInRange(System.DateTime,System.DateTime)">
            <summary>
            Gets all appointments which intersect the given date and time range.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentCollection.GetRecurringAppointments">
            <summary>
            Gets all appointments, which have a recurrence rule.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentCollection.OnChildInserted(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Called when a child has been inserted.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentCollection.OnChildRemoved(Nevron.Nov.Dom.NRemoveChildData)">
            <summary>
            Called when a child has been removed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentCollection.NAppointmentCollectionSchema">
            <summary>
            Schema associated with NAppointmentCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentGroup">
            <summary>
            A pair of schedule group name and item name associated with an appointment.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentGroup.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentGroup.#ctor(System.String,System.String)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="groupName"></param>
            <param name="itemName"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentGroup.GroupName">
            <summary>
            Gets the name of the schedule group this appointment belongs to.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentGroup.ItemName">
            <summary>
            Gets/Sets the name of the schedule group item this appointment is associated with.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentGroup.NAppointmentGroupSchema">
            <summary>
            Schema associated with NAppointmentGroup.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentGroup.GroupNameProperty">
            <summary>
            Reference to the GroupName property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentGroup.ItemNameProperty">
            <summary>
            Reference to the ItemName property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentGroupCollection">
            <summary>
            A collection of appointment groups.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentGroupCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentGroupCollection.FindByGroupName(System.String)">
            <summary>
            Finds the appointment group for the given group name. Returns null if an appointment group
            with such name does not exist in this collection.
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentGroupCollection.OnChildInserting(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Overriden to throw an exception if a group with name equal to the name of
            the one to be inserted already exists in the collection.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentGroupCollection.NAppointmentGroupCollectionSchema">
            <summary>
            Schema associated with NAppointmentGroupCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentGroupCollection.NAppointmentGroupCollectionDesigner">
            <summary>
            Designer for appointment group collections.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentGroupCollection.NAppointmentGroupCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NOccurrence">
            <summary>
            An appointment, which is a child of a recurring appointment and represents a single
            occurrence of a recurring event.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NOccurrence.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NOccurrence.GeneratedForStartDate">
            <summary>
            Gets/Sets the start date/time this appointment was generated for. This property
            is automatically set when an appointment is created from a recurrence rule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NOccurrence.GeneratedForEndDate">
            <summary>
            Gets/Sets the end date/time this appointment was generated for. This property
            is automatically set when an appointment is created from a recurrence rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NOccurrence.ShouldSerialize">
            <summary>
            Gets whether this appointment should serialize or not.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NOccurrence.NOccurrenceSchema">
            <summary>
            Schema associated with NOcurrence.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NOccurrence.GeneratedForStartDateProperty">
            <summary>
            Reference to the GeneratedForStartDate property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NOccurrence.GeneratedForEndDateProperty">
            <summary>
            Reference to the GeneratedForEndDate property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NOccurrence.NOccurrenceDesigner">
            <summary>
            Designer for occurences.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NOccurrence.NOccurrenceDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleClipping">
            <summary>
            The NScheduleClipping represents a set of appointments, which can be transfered
            across documents via Clipboard and Drag and Drop operations.
            </summary>
            <remarks>
            The NScheduleClipping is used to host an array of appointment clonings. 
            The NScheduleClipping class can also be used for duplicating schedule content.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.#ctor(Nevron.Nov.Schedule.NScheduleClipping)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.#ctor(Nevron.Nov.Dom.NDocument,Nevron.Nov.Schedule.NAppointmentBase[])">
            <summary>
            Initializing constructor.
            </summary>
            <param name="document"></param>
            <param name="appointments"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.DeepClone">
            <summary>
            Creates a deep copy of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.Initialize(Nevron.Nov.Dom.NDocument,Nevron.Nov.Schedule.NAppointmentBase[])">
            <summary>
            Initializes the clipping from the elements of the items document.
            </summary>
            <param name="document"></param>
            <param name="appointments"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.GetDataFormat">
            <summary>
            Overriden to return the NScheduleClipping.Format singleton.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.CreateDataObject">
            <summary>
            Creates a data object that contains this clipping content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.OnInitialized">
            <summary>
            Called when the clipping has been initialized.
            Override this method to store additional information about the clipping content.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.Serialize">
            <summary>
            Serializes the contnet of this clipping to a byte array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClipping.Deserialize(System.Byte[])">
            <summary>
            Deserialized the content of this clippnig from a byte array.
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleClipping.Format">
            <summary>
            The schedule data format.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NDateRangeGrouping">
            <summary>
            A schedule grouping by date range.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDateRangeGrouping.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDateRangeGrouping.Filter(Nevron.Nov.Schedule.NAppointmentBase,System.Object)">
            <summary>
            Checks whether the given appointment is associated with the specified value
            to this grouping.
            </summary>
            <param name="appointment"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDateRangeGrouping.GetDateRange(System.Object)">
            <summary>
            Gets the date time range for the given value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NDateRangeGrouping.NDateRangeGroupingSchema">
            <summary>
            Schema associated with NDateRangeGrouping.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NDayGrouping">
            <summary>
            A schedule grouping by day.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayGrouping.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayGrouping.GetValues(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the possible values for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayGrouping.GetValueAt(Nevron.Nov.Schedule.NSchedule,System.Int32)">
            <summary>
            Gets the value at the specified index for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayGrouping.GetValueCount(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the number of possible values for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayGrouping.GetDateRange(System.Object)">
            <summary>
            Gets the date time range for the given value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NDayGrouping.NDayGroupingSchema">
            <summary>
            Schema associated with NDayGrouping.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NWeekGrouping">
            <summary>
            A schedule grouping by week.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NWeekGrouping.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NWeekGrouping.GetValues(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the possible values for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NWeekGrouping.GetValueAt(Nevron.Nov.Schedule.NSchedule,System.Int32)">
            <summary>
            Gets the value at the specified index for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NWeekGrouping.GetValueCount(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the number of possible values for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NWeekGrouping.GetDateRange(System.Object)">
            <summary>
            Gets the date time range for the given value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NWeekGrouping.NWeekGroupingSchema">
            <summary>
            Schema associated with NWeekGrouping.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleGroup">
            <summary>
            Represents a schedule group.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroup.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroup.#ctor(System.String,System.String[])">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name"></param>
            <param name="items"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroup.#ctor(System.String,Nevron.Nov.Dom.NDomArray{System.String})">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name"></param>
            <param name="items"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGroup.Name">
            <summary>
            Gets/Sets the name of the group.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGroup.Items">
            <summary>
            Gets/Sets the items of this group.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroup.ToString">
            <summary>
            Gets the string representation of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroup.OnUnregistered">
            <summary>
            Called after the document node is unregistered from its owner document.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGroup.NScheduleGroupSchema">
            <summary>
            Schema associated with NScheduleGroup.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGroup.NameProperty">
            <summary>
            Reference to the Name property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGroup.ItemsProperty">
            <summary>
            Reference to the Items property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleGroup.NScheduleGroupDesigner">
            <summary>
            Designer for schedule groups.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroup.NScheduleGroupDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleGroupCollection">
            <summary>
            Represents a collection of schedule groups. No duplicating group names are allowed.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroupCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroupCollection.FindByName(System.String)">
            <summary>
            Finds the group with the given name. Returns null if a group with such name does not
            exist in this collection.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroupCollection.OnChildInserting(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Overriden to throw an exception if a group with name equal to the name of
            the one to be inserted already exists in the collection.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGroupCollection.NScheduleGroupCollectionSchema">
            <summary>
            Schema associated with NScheduleGroupCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleGroupCollection.NScheduleGroupCollectionDesigner">
            <summary>
            A designer of schedule group collections.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGroupCollection.NScheduleGroupCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NGrouping">
            <summary>
            Base class for all schedule groupings.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGrouping.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGrouping.Filter(Nevron.Nov.Schedule.NAppointmentBase,System.Object)">
            <summary>
            Checks whether the given appointment is associated with the given value
            to this grouping.
            </summary>
            <param name="appointment"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGrouping.GetValues(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the possible values for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGrouping.GetValueAt(Nevron.Nov.Schedule.NSchedule,System.Int32)">
            <summary>
            Gets the value at the specified index for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGrouping.GetValueCount(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the number of possible values for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NGrouping.NGroupingSchema">
            <summary>
            Schema associated with NGrouping.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NGroupingCollection">
            <summary>
            A collection of schedule groupings.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupingCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupingCollection.OnChildInserted(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Called when a child node has been inserted.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupingCollection.OnChildRemoved(Nevron.Nov.Dom.NRemoveChildData)">
            <summary>
            Called when a child node has been removed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NGroupingCollection.NGroupingCollectionSchema">
            <summary>
            Schema associated with NGroupingCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NGroupingCollection.NGroupingCollectionDesigner">
            <summary>
            Designer for schedule groupings.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupingCollection.NGroupingCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NGroupGrouping">
            <summary>
            A schedule grouping by group.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupGrouping.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupGrouping.#ctor(System.String)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="groupName"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NGroupGrouping.GroupName">
            <summary>
            Gets/Sets the name of the group this grouping is for.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupGrouping.Filter(Nevron.Nov.Schedule.NAppointmentBase,System.Object)">
            <summary>
            Checks whether the given appointment is associated with the given value
            to this grouping.
            </summary>
            <param name="appointment"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupGrouping.GetValues(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the possible values for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupGrouping.GetValueAt(Nevron.Nov.Schedule.NSchedule,System.Int32)">
            <summary>
            Gets the value at the specified index for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NGroupGrouping.GetValueCount(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the number of possible values for this grouping for the given schedule.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NGroupGrouping.NGroupGroupingSchema">
            <summary>
            Schema associated with NGroupGrouping.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NGroupGrouping.GroupNameProperty">
            <summary>
            Reference to the GroupName property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentPreview">
            <summary>
            Represents an appointment, which is being moved or resized.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentPreview.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentPreview.#ctor(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentPreview.BackgroundFill">
            <summary>
            Gets/Sets the background fill.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentPreview.BorderStroke">
            <summary>
            Gets/Sets the stroke of the border.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentPreview.Font">
            <summary>
            Gets/Sets the font of thie appointment preview.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentPreview.TextFill">
            <summary>
            Gets/Sets the fill of the text of this appointment preview.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentPreview.AppointmentMarksSize">
            <summary>
            Gets/Sets the size of the appointment marks.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentPreview.AppointmentMarksFill">
            <summary>
            Gets/Sets the fill of the appointment marks.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentPreview.TimeFormat">
            <summary>
            Gets/Sets the time format of this appointment preview.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentPreview.OnAncestorsChanged(Nevron.Nov.Dom.NNode)">
            <summary>
            Updates any references or cache related to the context of the node ancestors.
            </summary>
            <remarks>
            Overriden to cache a reference to the owner schedule.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentPreview.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the appointment preview.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreview.NAppointmentPreviewSchema">
            <summary>
            Schema associated with NAppointmentPreview.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreview.BackgroundFillProperty">
            <summary>
            Reference to the BackgroundFill property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreview.BorderStrokeProperty">
            <summary>
            Reference to the BorderStroke property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreview.FontProperty">
            <summary>
            Reference to the Font property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreview.TextFillProperty">
            <summary>
            Reference to the TextFill property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreview.TimeFormatProperty">
            <summary>
            Reference to the TimeFormat property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreview.AppointmentMarksSizeProperty">
            <summary>
            Reference to the AppointmentMarksSize property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreview.AppointmentMarksFillProperty">
            <summary>
            Reference to the AppointmentMarksFill property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentPreviewCollection">
            <summary>
            Represents a collection of appointment previews.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentPreviewCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreviewCollection.NAppointmentPreviewCollectionSchema">
            <summary>
            Schema associated with NAppointmentPreviewCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentPreviewGroup">
            <summary>
            Represents an appointment preview, which aggregates other move previews.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentPreviewGroup.#ctor(Nevron.Nov.DataStructures.NList{Nevron.Nov.Schedule.NAppointmentBase})">
            <summary>
            Initializing constructor.
            </summary>
            <param name="appointments"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentPreviewGroup.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Overriden to do nothing.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentPreviewGroup.NAppointmentPreviewGroupSchema">
            <summary>
            Schema associated with NAppointmentPreviewGroup.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceDailyRule">
            <summary>
            Represents a daily recurrence rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceDailyRule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceDailyRule.Frequency">
            <summary>
            Gets the frequency of this recurrence rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceDailyRule.TryGetPreviousDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the previous date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceDailyRule.TryGetNextDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the next date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceDailyRule.IncreaseTo(System.DateTime,System.DateTime)">
            <summary>
            Increases the given date and time to the first date and time larger than or equal to the
            specified target following this rule's logic.
            </summary>
            <param name="date"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceDailyRule.DecreaseTo(System.DateTime,System.DateTime)">
            <summary>
            Decreases the given date and time to the first date and time larger than the
            specified target following this rule's logic.
            </summary>
            <param name="date"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceDailyRule.NRecurrenceDailyRuleSchema">
            <summary>
            Schema associated with NRecurrenceDailyRule.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceDailyRule.NRecurrenceDailyRuleDesigner">
            <summary>
            Designer for recurrence daily rules.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceDailyRule.NRecurrenceDailyRuleDesigner.GetIntervalUnit">
            <summary>
            Gets the time unit name of the Interval recurrence rule property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceHourlyRule">
            <summary>
            Represents an hourly recurrence rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceHourlyRule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceHourlyRule.Frequency">
            <summary>
            Gets the frequency of this recurrence rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceHourlyRule.TryGetPreviousDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the previous date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceHourlyRule.TryGetNextDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the next date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceHourlyRule.IncreaseTo(System.DateTime,System.DateTime)">
            <summary>
            Increases the given date and time to the first date and time larger than or equal to the
            specified target following this rule's logic.
            </summary>
            <param name="date"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceHourlyRule.DecreaseTo(System.DateTime,System.DateTime)">
            <summary>
            Decreases the given date and time to the first date and time larger than the
            specified target following this rule's logic.
            </summary>
            <param name="date"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceHourlyRule.NRecurrenceHourlyRuleSchema">
            <summary>
            Schema associated with NRecurrenceHourlyRule.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceHourlyRule.NRecurrenceHourlyRuleDesigner">
            <summary>
            Designer for recurrence hourly rules.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceHourlyRule.NRecurrenceHourlyRuleDesigner.GetIntervalUnit">
            <summary>
            Gets the time unit name of the Interval recurrence rule property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceMonthlyRule">
            <summary>
            Represents a monthly recurrence rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.#ctor">
            <summary>
            Creates an absolute monthly rule, e.g. "every May 7".
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.#ctor(System.Int32)">
            <summary>
            Creates an absolute monthly rule, e.g. "every May 7".
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.#ctor(Nevron.Nov.Schedule.ENDayOrdinal,Nevron.Nov.Schedule.ENDayOfWeek)">
            <summary>
            Creates a montly rule with the given pattern type.
            </summary>
            <param name="dayOrdinal"></param>
            <param name="daysOfWeek"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.Frequency">
            <summary>
            Gets the frequency of this recurrence rule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.PatternType">
            <summary>
            Gets/Sets the pattern type of this recurrence.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.DayInMonth">
            <summary>
            Gets/Sets the day in month of this rule. Valid values are from 1 to 31 and from -31 to -1,
            where negative values mean days from the end of the month back. For example -1 represents
            the last day of the month.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.DayOrdinal">
            <summary>
            Gets/Sets the day in month when an appointment should occur.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.TryGetPreviousDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the previous date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.TryGetNextDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the next date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.DecreaseMonths(System.DateTime)">
            <summary>
            Decreases the months in the given date and goes to the previous year if they
            cannot be decreased anymore.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.IncreaseMonths(System.DateTime)">
            <summary>
            Increases the months in the given date and goes to the next year if they
            cannot be increased anymore.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.IsMonthAllowed(System.Int32)">
            <summary>
            Gets whether dates of the given month are allowed for this rule.
            </summary>
            <param name="monthNumber"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.NRecurrenceMonthlyRuleSchema">
            <summary>
            Schema associated with NRecurrenceMonthlyRule.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.PatternTypeProperty">
            <summary>
            Reference to the PatternType property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.DayOrdinalProperty">
            <summary>
            Reference to the DayOrdinal property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.DayInMonthProperty">
            <summary>
            Reference to the DayInMonth property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.NRecurrenceMonthlyRuleDesigner">
            <summary>
            Designer for recurrence monthly rules.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.NRecurrenceMonthlyRuleDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.NRecurrenceMonthlyRuleDesigner.CreateInstanceForSurrogateEditing(Nevron.Nov.Editors.NNodeSurrogate)">
            <summary>
            Creates a default instance of the node for the purpose of surrogate editing.
            </summary>
            <param name="surrogate"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceMonthlyRule.NRecurrenceMonthlyRuleDesigner.GetIntervalUnit">
            <summary>
            Gets the time unit name of the Interval recurrence rule property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceRule">
            <summary>
            Base class for all appointment recurrence rules.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceRule.Frequency">
            <summary>
            Gets the frequency of this recurrence rule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceRule.Interval">
            <summary>
            Gets/Sets the interval of the recurrence rule. By default set to 1.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceRule.StartDate">
            <summary>
            Gets/Sets the start date of the recurrence range. By default set to today.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceRule.EndMode">
            <summary>
            Gets/Sets the end mode of the recurrence. By default set to None, which means that
            the recurrence continues indefinitely.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceRule.EndDate">
            <summary>
            Gets/Sets the end date and time of the recurrence range. Taken into account only when <see cref="P:Nevron.Nov.Schedule.NRecurrenceRule.EndMode"/>
            is set to ByDate. By default set to 1 week from today.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceRule.MaxOccurrences">
            <summary>
            Gets/Sets the number of times the recurring appointment occurs. Taken into account only when
            <see cref="P:Nevron.Nov.Schedule.NRecurrenceRule.EndMode"/> is set to AfterOccurrences. By default set to 10.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceRule.ExcludedDates">
            <summary>
            Gets/Sets the date and times this recurrence rule should skip. By default not set, i.e. equal to null.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.GenerateTimes(System.DateTime,System.DateTime)">
            <summary>
            Generates the appointment start and end times defined by this rule for the given time range.
            </summary>
            <param name="rangeStart"></param>
            <param name="rangeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.ExcludeDate(System.DateTime)">
            <summary>
            Excludes the given date and time from this recurrence rule.
            </summary>
            <param name="date"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.IncludeDate(System.DateTime)">
            <summary>
            Checks if the given date and time is excluded from this recurrence rule and
            if it is, removes it from the array of excluded dates.
            </summary>
            <param name="date"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.TryGetPreviousDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the previous date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.TryGetNextDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the next date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.TryGetFirstAppointmentStart(System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the start date and time of the first appointment defined by this recurrence rule,
            which intersects the given date time range.
            </summary>
            <param name="appointmentStart"></param>
            <param name="appointmentEnd"></param>
            <param name="rangeStart"></param>
            <param name="rangeEnd"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.GetEffectiveRangeEnd(System.DateTime,System.DateTime)">
            <summary>
            Gets the effective range end of this recurrence rule.
            </summary>
            <param name="appointmentStart"></param>
            <param name="appointmentEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.GetEndDateForMaxOccurrences(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Gets the effective range end of this recurrence rule for the given number of occurrences.
            </summary>
            <param name="appointmentStart"></param>
            <param name="appointmentEnd"></param>
            <param name="maxOccurrences"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.IncreaseTo(System.DateTime,System.DateTime)">
            <summary>
            Increases the given date and time to the first date and time larger than or equal to the
            specified target following this rule's logic.
            </summary>
            <param name="date"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.DecreaseTo(System.DateTime,System.DateTime)">
            <summary>
            Decreases the given date and time to the first date and time larger than the
            specified target following this rule's logic.
            </summary>
            <param name="date"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceRule.NRecurrenceRuleSchema">
            <summary>
            Schema associated with NRecurrenceRule.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceRule.IntervalProperty">
            <summary>
            Reference to the Interval property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceRule.StartDateProperty">
            <summary>
            Reference to the StartDate property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceRule.EndModeProperty">
            <summary>
            Reference to the EndMode property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceRule.EndDateProperty">
            <summary>
            Reference to the EndDate property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceRule.MaxOccurrencesProperty">
            <summary>
            Reference to the MaxOccurrences property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceRule.ExcludedDatesProperty">
            <summary>
            Reference to the ExcludedDates property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceRule.NRecurrenceRuleDesigner">
            <summary>
            Designer for recurrence rules.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.NRecurrenceRuleDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.NRecurrenceRuleDesigner.GetCompatibleTypes">
            <summary>
            Returns the types this designer is compatible with.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.NRecurrenceRuleDesigner.CreateInstanceEditor(Nevron.Nov.Dom.NNode,Nevron.Nov.Editors.NEditorContext)">
            <summary>
            Creates the editor, which must edit the specified node.
            </summary>
            <param name="node"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.NRecurrenceRuleDesigner.CreateInstanceForSurrogateEditing(Nevron.Nov.Editors.NNodeSurrogate)">
            <summary>
            Creates a default instance of the node for the purpose of surrogate editing.
            </summary>
            <param name="surrogate"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceRule.NRecurrenceRuleDesigner.GetIntervalUnit">
            <summary>
            Gets the time unit name of the Interval recurrence rule property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceWeeklyRule">
            <summary>
            Represents a weekly recurrence rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.#ctor(Nevron.Nov.Schedule.ENDayOfWeek)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="daysOfWeek"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.Frequency">
            <summary>
            Gets the frequency of this recurrence rule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.DaysOfWeek">
            <summary>
            Gets/Sets the days of the week this recurrence occurs on. This is a flag enum.
            By default set to EveryDay.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.TryGetPreviousDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the previous date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.TryGetNextDate(System.DateTime,System.DateTime@)">
            <summary>
            Tries to get the next date and time relative to the given one.
            </summary>
            <param name="date"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.NRecurrenceWeeklyRuleSchema">
            <summary>
            Schema associated with NRecurrenceWeeklyRule.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.DaysOfWeekProperty">
            <summary>
            Reference to the DaysOfWeek property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.NRecurrenceWeeklyRuleDesigner">
            <summary>
            Designer for recurrence weekly rules.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.NRecurrenceWeeklyRuleDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.NRecurrenceWeeklyRuleDesigner.CreateInstanceForSurrogateEditing(Nevron.Nov.Editors.NNodeSurrogate)">
            <summary>
            Creates a default instance of the node for the purpose of surrogate editing.
            </summary>
            <param name="surrogate"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceWeeklyRule.NRecurrenceWeeklyRuleDesigner.GetIntervalUnit">
            <summary>
            Gets the time unit name of the Interval recurrence rule property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceYearlyRule">
            <summary>
            Represents an yearly recurrence rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceYearlyRule.#ctor">
            <summary>
            Creates an absolute yearly rule, e.g. "every May 7, every year".
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceYearlyRule.#ctor(System.Int32,Nevron.Nov.Schedule.ENMonth)">
            <summary>
            Creates an absolute yearly rule, e.g. "every May 7, every year".
            </summary>
            <param name="dayInMonth"></param>
            <param name="monthsInYear"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceYearlyRule.#ctor(Nevron.Nov.Schedule.ENDayOrdinal,Nevron.Nov.Schedule.ENDayOfWeek,Nevron.Nov.Schedule.ENMonth)">
            <summary>
            Creates a relative yearly rule, e.g. "the third Monday of May and November, every year".
            </summary>
            <param name="dayOrdinal"></param>
            <param name="daysOfWeek"></param>
            <param name="monthsInYear"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceYearlyRule.Frequency">
            <summary>
            Gets the frequency of this recurrence rule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NRecurrenceYearlyRule.MonthsInYear">
            <summary>
            Gets/Sets the months for which this rule is defined.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceYearlyRule.DecreaseMonths(System.DateTime)">
            <summary>
            Decreases the months in the given date and goes to the previous year if they
            cannot be decreased anymore.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceYearlyRule.IncreaseMonths(System.DateTime)">
            <summary>
            Increases the months in the given date and goes to the next year if they
            cannot be increased anymore.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceYearlyRule.IsMonthAllowed(System.Int32)">
            <summary>
            Gets whether dates of the given month are allowed for this rule.
            </summary>
            <param name="monthNumber"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceYearlyRule.NRecurrenceYearlyRuleSchema">
            <summary>
            Schema associated with NRecurrenceYearlyRule.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NRecurrenceYearlyRule.MonthsInYearProperty">
            <summary>
            Reference to the MonthsInYear property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NRecurrenceYearlyRule.NRecurrenceYearlyRuleDesigner">
            <summary>
            Designer for recurrence yearly rules.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceYearlyRule.NRecurrenceYearlyRuleDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceYearlyRule.NRecurrenceYearlyRuleDesigner.CreateInstanceForSurrogateEditing(Nevron.Nov.Editors.NNodeSurrogate)">
            <summary>
            Creates a default instance of the node for the purpose of surrogate editing.
            </summary>
            <param name="surrogate"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NRecurrenceYearlyRule.NRecurrenceYearlyRuleDesigner.GetIntervalUnit">
            <summary>
            Gets the time unit name of the Interval recurrence rule property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.NSchedule">
            <summary>
            The root element of a schedule document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="E:Nevron.Nov.Schedule.NSchedule.ViewModeChanged">
            <summary>
            Occurs when the ViewMode property has changed.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Appointments">
            <summary>
            Gets/Sets the appointments of this schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Grid">
            <summary>
            Gets/Sets the schedule grid.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Header">
            <summary>
            Gets/Sets the Header child.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.TimeRuler">
            <summary>
            Gets/Sets the TimeRuler child.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Groups">
            <summary>
            Gets/Sets the groups of this schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Categories">
            <summary>
            Gets/Sets the categories of this schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.TimeMarkers">
            <summary>
            Gets/Sets the time markers of this schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.PrintLayout">
            <summary>
            Gets/Sets the settings related to the layout of the schedule for printing.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Previews">
            <summary>
            Gets/Sets previews of the currently moved or resized appointments.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.DayViewMode">
            <summary>
            Gets/Sets the day view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.WeekViewMode">
            <summary>
            Gets/Sets the week view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.MonthViewMode">
            <summary>
            Gets/Sets the month view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.TimeZone">
            <summary>
            Gets/Sets the time zone of the schedule. By default set to the local time zone.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.ViewMode">
            <summary>
            Gets/Sets the active view mode of this schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.CurrentTimeIndicator">
            <summary>
            Gets/Sets the current time indicator.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.TimeIndicators">
            <summary>
            Gets/Sets the collection of schedule time indicators.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.X">
            <summary>
            Gets or sets the X coordinate of the schedule bounding box.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Y">
            <summary>
            Gets or sets the Y coordinate of the schedule bounding box.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Width">
            <summary>
            Gets the width of the active view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Height">
            <summary>
            Gets the height of the active view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Bounds">
            <summary>
            Gets the schedule bounding box, which is formed by the X, Y properties and
            the size of the active view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.ViewportOriginX">
            <summary>
            Gets or sets the Origin X value.
            The Origin is the first visible point from the schedule (in local coordinates).
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.ViewportOriginY">
            <summary>
            Gets or sets the Origin Y value.
            The Origin is the first visible point from the schedule (in local coordinates).
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.ViewportOrigin">
            <summary>
            Gets or sets the viewport origin of the schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.WindowOriginX">
            <summary>
            Gets or sets the Window Origin X value (in parent coordinates).
            The value of this property is automatically set by NScheduleView hosting the schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.WindowOriginY">
            <summary>
            Gets or sets the Window Origin Y value (in parent coordinates).
            The value of this property is automatically set by NScheduleView hosting the schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.WindowOrigin">
            <summary>
            Gets/Sets the window origin of the schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.ZoomMode">
            <summary>
            Gets or sets the schedule zoom policy.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.ZoomFactor">
            <summary>
            Gets/Sets the zoom factor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.MinZoomFactor">
            <summary>
            Gets/Sets the minimum zoom factor allowed when changing the zoom factor through
            Zoom In and Zoom Out.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.MaxZoomFactor">
            <summary>
            Gets/Sets the maximum zoom factor allowed when changing the zoom factor through
            Zoom In and Zoom Out.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.ZoomStep">
            <summary>
            Gets/Sets the step with which to change the zoom factor when zooming in and out.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.BackgroundFill">
            <summary>
            Gets/Sets the background filling of the schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Border">
            <summary>
            Gets/Sets the schedule border.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Margins">
            <summary>
            Gets/Sets the margins, which is applied to the bounds of the schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Padding">
            <summary>
            Gets/Sets the padding, which are applied to the content when the schedule is sized to it.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.BorderThickness">
            <summary>
            Gets/Sets the thickness of the border surrounding the schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.AppointmentHorizontalSpacing">
            <summary>
            Gets/Sets the horizontal spacing between appointments.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.AppointmentVerticalSpacing">
            <summary>
            Gets/Sets the vertical spacing between appointments.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.GroupSpacing">
            <summary>
            Gets/Sets the spacing between two adjacent groups.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.TimelineViewMode">
            <summary>
            Gets/Sets the timeline view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.HScrollMode">
            <summary>
            Gets or sets the scroll policy, which specifies the visibility of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.VScrollMode">
            <summary>
            Gets or sets the scroll policy, which specifies the visibility of the vertical scrollbar.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.NoScrollHAlign">
            <summary>
            Gets or sets the horizontal content control alignment, when a horizontal scrollbar is not, or must not be displayed.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.NoScrollVAlign">
            <summary>
            Gets or sets the vertical content control alignment, when a vertical scrollbar is not, or must not be displayed.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.SmallHScrollChange">
            <summary>
            Gets/Sets the small horizontal scroll change.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.SmallVScrollChange">
            <summary>
            Gets/Sets the small vertical scroll change.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.CurrentDate">
            <summary>
            Gets/Sets the starting date shown by this schedule view.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Selection">
            <summary>
            Gets/Sets the value of the Selection property.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Interactivity">
            <summary>
            Gets/Sets the interactivity options of this schedule.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.ActiveViewMode">
            <summary>
            Gets the currently active view mode instance. The active view mode can be specified
            through the <see cref="P:Nevron.Nov.Schedule.NSchedule.ViewMode"/> property.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.Information">
            <summary>
            Gets/Sets the value of the Information property.
            </summary>
        </member>
        <member name="E:Nevron.Nov.Schedule.NSchedule.InformationChanged">
            <summary>
            Occurs when the informaiton property has changed.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.IsPooledForMeasure">
            <summary>
            Gets whether the element is pooled for measure validation.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.IsMeasureValid">
            <summary>
            Gets whether the measure of the element is valid
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.InvalidateMeasure(System.Object)">
            <summary>
            Invalidates the element measure and pools the element for measure validation.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ValidateMeasure">
            <summary>
            Called to validate the element measure
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.InvalidateMeasureFromChild(Nevron.Nov.Dom.NElement,Nevron.Nov.Dom.ENLayoutParentInvalidationReason,System.Object)">
            <summary>
            Invalidates the element measure due to a change in one of its child elements.
            </summary>
            <param name="childElement"></param>
            <param name="reason"></param>
            <param name="hint"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.IsPooledForArrange">
            <summary>
            Gets whether the element is pooled for arrange validation.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NSchedule.IsArrangeValid">
            <summary>
            Gets whether the arrange of the element is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.InvalidateArrange(System.Object)">
            <summary>
            Invalidates the element arrange.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ValidateArrange">
            <summary>
            Called to arrange the element.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.InvalidateArrangeFromChild(Nevron.Nov.Dom.NElement,Nevron.Nov.Dom.ENLayoutParentInvalidationReason,System.Object)">
            <summary>
            Invalidates the element arrange due to a change in one of its child elements.
            </summary>
            <param name="childElement"></param>
            <param name="reason"></param>
            <param name="hint"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPagedElement#IsSheetRangeModeSupported(Nevron.Nov.UI.ENSheetRangeMode)">
            <summary>
            Determines whether the specified printRangeMode option is supported by the element.
            </summary>
            <param name="rdUG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPagedElement#BeginPrinting(Nevron.Nov.UI.NPagedContext)">
            <summary>
            Called when priting is about to start
            </summary>
            <param name="SdUG"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPagedElement#QueryPageSettings(Nevron.Nov.UI.NPagedContext)">
            <summary>
            Called before printing a page.
            </summary>
            <param name="tdUG"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPagedElement#PrintPage(Nevron.Nov.UI.NPagedContext)">
            <summary>
            Called when a print page needs to be displayed.
            </summary>
            <param name="UdUG"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPagedElement#EndPrinting">
            <summary>
            Called when printing ends.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPrintLayoutElement#GetSheetRangeModeText(Nevron.Nov.UI.ENSheetRangeMode)">
            <summary>
            Gets the context specific text representaton of the specified printRangeMode.
            </summary>
            <param name="vdUG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPrintLayoutElement#GetSheetRangeModeSheetRange(Nevron.Nov.UI.ENSheetRangeMode)">
            <summary>
            Gets the range of sheets, which are going to be printed by the specified printRangeMode.
            </summary>
            <param name="WdUG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPrintLayoutElement#CanHaveMultipleSheets">
            <summary>
            Always returns false, since the schedule can not contain multiple sheets.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPrintLayoutElement#GetSheetCount">
            <summary>
            Always returns 1, since the sheet has one and only sheet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPrintLayoutElement#GetSheetTitle(System.Int32)">
            <summary>
            Gets the title of the page with the specified index.
            </summary>
            <param name="xdUG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPrintLayoutElement#GetSheetPrintLayout(System.Int32)">
            <summary>
            Gets the print layout of the sheet with the specified index.
            </summary>
            <param name="YdUG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPrintLayoutElement#SetSheetPrintLayout(System.Int32,Nevron.Nov.UI.NPrintLayout)">
            <summary>
            Sets the print layout of the sheet with the specified index.
            </summary>
            <param name="AEUG"></param>
            <param name="bEUG"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.Nevron#Nov#UI#INPrintLayoutElement#GetPrintLayoutTilingGridSet(Nevron.Nov.UI.ENSheetRangeMode)">
            <summary>
            Gets the set of tiling grids, for the current context print range mode.
            </summary>
            <param name="CEUG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.AccumulateDisplayChildren(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.DataStructures.NList{Nevron.Nov.Dom.NVisual})">
            <summary>
            Appends the displayable children of the element to the given list.
            </summary>
            <param name="visitor"></param>
            <param name="list"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.VisitChildDisplaySubtree(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.Dom.NVisual)">
            <summary>
            Called to propagate the display traversal to the node children.
            </summary>
            <param name="visitor"></param>
            <param name="child"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.CanTransform">
            <summary>
            Indicates whether this element currently returns a transformation different than NMatrix.Identity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.LocalToParent(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Transforms a point in local coordinates to the coordinates of its parent coordinate system.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ParentToLocal(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Transforms a point in parent coordinates to local coordinates.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.GetTransform">
            <summary>
            Gets the matrix that transforms local to parent coordinates.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.DoPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <remarks>
            Overriden to render the element background and border background.
            </remarks>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.DoPostPaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element post children paint.
            </summary>
            <remarks>
            Overriden to render focus decorator.
            </remarks>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.GetContentEdge">
            <summary>
            Gets the content edge (inner edge) of the element (in local coordinates)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.GetContentEdge(System.Double,System.Double)">
            <summary>
            Gets the content edge (inner edge) of the element (in local coordinates),
            provided that the box had the specified width and height.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.GetPaddingEdge">
            <summary>
            Gets the padding edge (padding area) of the element (in local coordinates).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.GetPaddingEdge(System.Double,System.Double)">
            <summary>
            Gets the padding edge (padding area) of the element (in local coordinates),
            provided that the box had the specified width and height.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.GetBorderEdge">
            <summary>
            Gets the border edge (border area) of the element (in local coordinates).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.GetBorderEdge(System.Double,System.Double)">
            <summary>
            Gets the border edge (border area) of the element (in local coordinates),
            provided that the box had the specified width and height.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.GetInsets">
            <summary>
            Gets the element insets. 
            This implemenation returns the sum of the margins, padding and border thickness.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ScrollInDirection(Nevron.Nov.Graphics.ENCompassDirection,System.Double)">
            <summary>
            Scrolls the viewport in the specified direction, with the specified amount of steps.
            </summary>
            <param name="direction"></param>
            <param name="steps"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ScrollToTime(System.TimeSpan)">
            <summary>
            Scrolls the schedule to the given time.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.CreateAppointmentPreview(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Creates a preview for the given appointment.
            </summary>
            <param name="appointment"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.CreateAppointmentPreview(Nevron.Nov.DataStructures.NList{Nevron.Nov.Schedule.NAppointmentBase})">
            <summary>
            Creates a preview for the given appointments.
            </summary>
            <param name="appointments"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ZoomIn">
            <summary>
            Increaseases the zoom factor with the zoom step.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ZoomOut">
            <summary>
            Decreases the zoom factor with the zoom step.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ZoomToFactor(System.Double)">
            <summary>
            Zooms the page to the specified factor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.LogicalToSchedule(System.Double)">
            <summary>
            Converts a logical length to length in schedule drawing units (DIPs).
            This method takes into account the drawing scale.
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.LogicalToSchedule(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Converts a logical point to a point in page drawing units (DIPs)
            This method takes into account the drawing scale.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ScheduleToLogical(System.Double)">
            <summary>
            Converts a length in page drawing units (DIPs) to a logical length.
            This method takes into account the drawing scale.
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ScheduleToLogical(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Converts a point in page drawing units (DIPs) to a point in logical length.
            This method takes into account the drawing scale.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.HitTest(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Gets the appointment widget at the given location in the schedule.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.OnRegistered">
            <summary>
            Called after the document node is registered in its owner document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.OnUnregistered">
            <summary>
            Called after the document node is unregistered from its owner document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.MeasureCore">
            <summary>
            Measures the schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.ArrangeCore">
            <summary>
            Arranges the appointments of this schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.OnPaintBackground(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the background of the box, which is performed before the custom painting in OnPrePaint.
            </summary>
            <remarks>
            This implementation paints the box background and border.
            </remarks>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.OnPaintForeground(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the foreground of the box, which is performed after the custom painting in OnPostPaint.
            </summary>
            <remarks>
            This implementation renders the focus decorator.
            </remarks>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.CreateBorderWall(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Creates the border wall of the box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.AppendDefaultCategories(Nevron.Nov.Schedule.NCategoryCollection)">
            <summary>
            Appends the default categories to the given schedule category collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.AppendDefaultTimeMarkers(Nevron.Nov.Schedule.NTimeMarkerCollection)">
            <summary>
            Appends the default time markers to the given schedule time markers collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.CreateCurrentTimeIndicator">
            <summary>
            Creates the current time indicator. It is not visible by default and has
            a semi-transparent red fill - new NColorFill(new NColor(192, 0, 0, 160)).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.OnCurrentDateChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the CurrentDate property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.OnViewModeChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the ViewMode property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.OnTransformChanged">
            <summary>
            Called when the transform of the schedule has changed.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.NScheduleSchema">
            <summary>
            Schema associated with NSchedule.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.AppointmentsChild">
            <summary>
            Reference to the Appointments child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.HeaderChild">
            <summary>
            Reference to the Header child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.TimeRulerChild">
            <summary>
            Reference to the TimeRuler child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.GridChild">
            <summary>
            Reference to the Grid child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.GroupsChild">
            <summary>
            Reference to the Groups child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.CategoriesChild">
            <summary>
            Reference to the Categories child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.TimeMarkersChild">
            <summary>
            Reference to the TimeMarkers child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.PrintLayoutChild">
            <summary>
            Reference to the PrintLayout child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.PreviewsChild">
            <summary>
            Reference to the Previews child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.DayViewModeChild">
            <summary>
            Reference to the DayViewMode child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.WeekViewModeChild">
            <summary>
            Reference to the WeekViewMode child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.MonthViewModeChild">
            <summary>
            Reference to the MonthViewMode child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.TimelineViewModeChild">
            <summary>
            Reference to the TimelineViewMode child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.InformationProperty">
            <summary>
            Reference to the Information property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.DisplayLengthProperty">
            <summary>
            Reference to the DisplayLength property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.TimeZoneProperty">
            <summary>
            Reference to the TimeZone property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.ViewModeProperty">
            <summary>
            Reference to the ViewMode property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.XProperty">
            <summary>
            Reference to the X property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.YProperty">
            <summary>
            Reference to the Y property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.ViewportOriginXProperty">
            <summary>
            Reference to the ViewportOriginX property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.ViewportOriginYProperty">
            <summary>
            Reference to the ViewportOriginY property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.WindowOriginXProperty">
            <summary>
            Reference to the WindowOrigingX property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.WindowOriginYProperty">
            <summary>
            Reference to the WindowOriginY property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.ZoomModeProperty">
            <summary>
            Reference to the ZoomMode property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.ZoomFactorProperty">
            <summary>
            Reference to the ZoomFactor property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.MinZoomFactorProperty">
            <summary>
            Reference to the MinZoomFactor property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.MaxZoomFactorProperty">
            <summary>
            Reference to the MaxZoomFactor property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.ZoomStepProperty">
            <summary>
            Reference to the ZoomStep property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.BackgroundFillProperty">
            <summary>
            Reference to the BackgroundFill property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.BorderProperty">
            <summary>
            Reference to the Border property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.BorderThicknessProperty">
            <summary>
            Reference to the BorderThickness property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.PaddingProperty">
            <summary>
            Reference to the Padding property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.MarginsProperty">
            <summary>
            Reference to the Margins property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.AppointmentHorizontalSpacingProperty">
            <summary>
            Reference to the AppointmentHorizontalSpacing property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.AppointmentVerticalSpacingProperty">
            <summary>
            Reference to the AppointmentVerticalSpacing property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.GroupSpacingProperty">
            <summary>
            Reference to the GroupSpacing property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.CurrentTimeIndicatorProperty">
            <summary>
            Reference to the CurrentTimeIndicator property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.TimeIndicatorsProperty">
            <summary>
            Reference to the TimeIndicators property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.HScrollModeProperty">
            <summary>
            Reference to the HScrollMode property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.VScrollModeProperty">
            <summary>
            Reference to the VScrollMode property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.NoScrollHAlignProperty">
            <summary>
            Reference to the NoScrollHAlign property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.NoScrollVAlignProperty">
            <summary>
            Reference to the NoScrollVAlign property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.SmallHScrollChangeProperty">
            <summary>
            Reference to the SmallHScrollChange property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.SmallVScrollChangeProperty">
            <summary>
            Reference to the SmallVScrollChange property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.CurrentDateProperty">
            <summary>
            Reference to the CurrentDate property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.SelectionProperty">
            <summary>
            Reference to the Selection property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedule.InteractivityProperty">
            <summary>
            Reference to the Interactivity property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NSchedule.NScheduleDesigner">
            <summary>
            Designer for schedules.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedule.NScheduleDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleDocument">
            <summary>
            Rperesents a schedule document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDocument.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDocument.ApplyTheme(Nevron.Nov.Schedule.NScheduleTheme)">
            <summary>
            Applies the given schedule theme to this schedule document.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDocument.CreateDefaultTheme">
            <summary>
            Creates the default theme of this schedule document.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleDocument.NScheduleDocumentSchema">
            <summary>
            Schema associated with NScheduleDocument.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleGrid">
            <summary>
            Represents the schedule grid.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGrid.HighlightedCellFill">
            <summary>
            Gets/Sets the background fill of the currently highlighted grid cell.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGrid.SelectedCellFill">
            <summary>
            Gets/Sets the background fill of the currently selected grid cells.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGrid.SelectedCells">
            <summary>
            Gets the currently selected schedule grid cells.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.GetDateTimeForPosition(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Gets the DateTime, which corresponds to the given position in grid coordinates.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.GetCellForPosition(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Gets the schedule grid cell, which contains the given point.
            The point should be expressed in the grid coordinate system.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.SelectCell(Nevron.Nov.Schedule.NScheduleGridCell)">
            <summary>
            Selects the given schedule grid cell.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.SingleSelectCell(Nevron.Nov.Schedule.NScheduleGridCell)">
            <summary>
            Selects the given grid cell and deselects all others.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.DeselectAllCells">
            <summary>
            Deselects all currently selected schedule grid cells.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Called when the mouse moves over the schedule grid.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.OnMouseOut(Nevron.Nov.UI.NMouseOverChangeEventArgs)">
            <summary>
            Called when the mouse exits the empty area of the schedule grid (i.e. when it goes out
            of the grid or goes over an appointment widget).
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the grid.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGrid.NScheduleGridSchema">
            <summary>
            Schema associated with NScheduleGrid.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGrid.HighlightedCellFillProperty">
            <summary>
            Reference to the HighlightedCellFill property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGrid.SelectedCellFillProperty">
            <summary>
            Reference to the SelectedCellFill property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleGrid.NScheduleGridDesigner">
            <summary>
            Designer for schedule grids.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.NScheduleGridDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGrid.NScheduleGridDesigner.ConfigureCellsCategory">
            <summary>
            Configures the "Cells" category.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleGridCell">
            <summary>
            Represents a schedule grid cell.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGridCell.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGridCell.AppendContextMenuItems(Nevron.Nov.UI.NMenu,System.Boolean)">
            <summary>
            Appends context menu items to the given menu.
            </summary>
            <param name="menu"></param>
            <param name="readOnly"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridCell.RowIndex">
            <summary>
            The row index of the cell.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridCell.ColumnIndex">
            <summary>
            The column index of the cell.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridCell.StartTime">
            <summary>
            The start time of the cell.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridCell.EndTime">
            <summary>
            The end time of the cell.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridCell.Groups">
            <summary>
            The schedule groups and items this cell is associated with.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridCell.NScheduleGridCellSchema">
            <summary>
            Schema associated with NScheduleGridCell.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleGridRulersBase">
            <summary>
            Base class for the schedule grid and rulers.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGridRulersBase.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGridRulersBase.MajorLinesStroke">
            <summary>
            Controls the appearance of the major lines.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGridRulersBase.MinorLinesStroke">
            <summary>
            Controls the appearance of the minor lines.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGridRulersBase.MinorLinesCount">
            <summary>
            Gets/Sets the number of minor lines between two adjacent major lines.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGridRulersBase.StepMode">
            <summary>
            Gets/Sets the step mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleGridRulersBase.FixedStep">
            <summary>
            Gets/Sets the step in hours, which should be used for the lines when StepMode is set to fixed.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridRulersBase.NScheduleGridRulersBaseSchema">
            <summary>
            Schema associated with NScheduleGridRulersBase.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridRulersBase.MinorLinesCountProperty">
            <summary>
            Reference to the MinorLinesCount property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridRulersBase.MajorLinesStrokeProperty">
            <summary>
            Reference to the MajorLinesStroke property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridRulersBase.MinorLinesStrokeProperty">
            <summary>
            Reference to the MinorLinesStroke property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridRulersBase.StepModeProperty">
            <summary>
            Reference to the StepMode property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleGridRulersBase.FixedStepProperty">
            <summary>
            Reference to the FixedStep property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleGridRulersBase.NScheduleGridRulersBaseDesigner">
            <summary>
            Designer for schedule grid and time rulers.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGridRulersBase.NScheduleGridRulersBaseDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGridRulersBase.NScheduleGridRulersBaseDesigner.ConfigureAppearanceCategory">
            <summary>
            Configures the "Appearance" category.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleGridRulersBase.NScheduleGridRulersBaseDesigner.ConfigureTextCategory">
            <summary>
            Configures the "Text" category.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleHeader">
            <summary>
            Represents the header of a schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleHeader.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleHeader.Stroke">
            <summary>
            Gets/Sets the stroke to use for the borders of the header labels.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleHeader.LabelPadding">
            <summary>
            Gets/Sets the padding to apply to each label of the schedule header.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleHeader.DateFormat">
            <summary>
            Gets/Sets the format of dates. Used in day, week and timeline view. By default set to
            "dd dddd", which produces texts like "04 Monday".
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleHeader.DateRangeFormat">
            <summary>
            Gets/Sets the format of date ranges. Used in month view. By default set to
            "{0:dd MMM} - {1:dd MMM}", which produces texts like "01 Jan - 07 Jan".
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleHeader.MeasureContent(System.Boolean)">
            <summary>
            Measures the width or the height of the header depending on its orientation.
            </summary>
            <param name="defaultMeasure"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleHeader.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the schedule view header.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleHeader.RequestTooltip">
            <summary>
            Overriden to show a tooltip for clipped labels.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleHeader.GetDateString(System.DateTime)">
            <summary>
            Gets the string representation of the given date.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleHeader.GetDateRangeString(Nevron.Nov.NDateTimeRange)">
            <summary>
            Gets the string representation of the given date range.
            </summary>
            <param name="dateRange"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleHeader.NScheduleHeaderSchema">
            <summary>
            Schema associated with NScheduleHeader.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleHeader.StrokeProperty">
            <summary>
            Reference to the Stroke property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleHeader.LabelPaddingProperty">
            <summary>
            Reference to the LabelPadding property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleHeader.DateFormatProperty">
            <summary>
            Reference to the DateFormat property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleHeader.DateRangeFormatProperty">
            <summary>
            Reference to the DateRangeFormat property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleHeader.NScheduleHeaderDesigner">
            <summary>
            Designer for schedule headers.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleHeader.NScheduleHeaderDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleHeader.NScheduleHeaderDesigner.ConfigureAppearanceCategory">
            <summary>
            Configures the "Appearance" category.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleHeader.NScheduleHeaderDesigner.ConfigureTextCategory">
            <summary>
            Configures the "Text" category.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NSchedulePrintLayout">
            <summary>
            Represents a schedule print layout.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedulePrintLayout.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedulePrintLayout.GetDocumentBounds">
            <summary>
            Gets the bounds of the given document element.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NSchedulePrintLayout.NSchedulePrintLayoutSchema">
            <summary>
            Schema associated with NSchedulePrintLayout.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleSelection">
            <summary>
            Represents the currently selected appointments of a schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleSelection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleSelection.OwnerSchedule">
            <summary>
            Gets the schedule to which this selection belongs.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleSelection.ClickSelect(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Performs a click node selection.
            </summary>
            <remarks>
            This method takes into account the current Control key state and performs the following actions:
            <para>
            1. If the CTRL key is pressed it will toggle the node selection state.
            </para>
            <para>
            2. If no key modifier is pressed and the node is not already selected it will single select it.
            </para>
            </remarks>
            <param name="appointment">Appointment to select.</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleSelection.OnSelected(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Called when the specified appointment has been selected.
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleSelection.OnDeselected(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Called when the specified appointment has been deselected.
            </summary>
            <param name="appointment">item which has been deselected.</param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleSelection.NScheduleSelectionSchema">
            <summary>
            Schema associated with NScheduleSelection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleTimeRuler">
            <summary>
            Represents the time ruler of a Nevron schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTimeRuler.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleTimeRuler.DateFormat">
            <summary>
            The date format string. By default set to "d" (short date).
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleTimeRuler.TimeFormat">
            <summary>
            The time format string. By default set to "H:mm".
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleTimeRuler.HorizontalMinorTickLength">
            <summary>
            Gets/Sets the length of the minor ticks in DIPs when the time ruler is horizontally oriented.
            By default set to 7.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleTimeRuler.VerticalMinorTickLength">
            <summary>
            Gets/Sets the length of the minor ticks in DIPs when the time ruler is vertically oriented.
            By default set to 12.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTimeRuler.MeasureContent(System.Boolean)">
            <summary>
            Measures this time ruler. This implementation returns only width for vertically oriented
            time rulers and only height for horizontally oriented ones. The other dimension of the
            time ruler is determined by the size of the schedule.
            </summary>
            <param name="defaultMeasure"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTimeRuler.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the time ruler.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTimeRuler.NScheduleTimeRulerSchema">
            <summary>
            Schema associated with NScheduleTimeRuler.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTimeRuler.DateFormatProperty">
            <summary>
            Reference to the DateFormat property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTimeRuler.TimeFormatProperty">
            <summary>
            Reference to the TimeFormat property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTimeRuler.HorizontalMinorTickLengthProperty">
            <summary>
            Reference to the HorizontalMinorTickLength property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTimeRuler.VerticalMinorTickLengthProperty">
            <summary>
            Reference to the VerticalMinorTickLength property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleTimeRuler.NScheduleTimeRulerDesigner">
            <summary>
            Designer for schedule time rulers.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTimeRuler.NScheduleTimeRulerDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTimeRuler.NScheduleTimeRulerDesigner.ConfigureTextCategory">
            <summary>
            Configures the "Text" category.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NCurrentTimeIndicator">
            <summary>
            A schedule time indicator that shows the current time.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCurrentTimeIndicator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCurrentTimeIndicator.#ctor(Nevron.Nov.Graphics.NColor)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="fillColor">The fill color of the time indicator. For best results use
            a semi-transparent color, for example - new NColor(192, 0, 0, 160). 
            </param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCurrentTimeIndicator.#ctor(Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="fill">The fill style of the time indicator. For best results use a
            semi-transparent color fill, for example - new NColorFill(new NColor(192, 0, 0, 160)).</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCurrentTimeIndicator.#ctor(Nevron.Nov.Graphics.NFill,System.Double)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="fill">The fill style of the time indicator. For best results use a
            semi-transparent color fill, for example - new NColorFill(new NColor(192, 0, 0, 160)).</param>
            <param name="thickness">The time indicator thickness in DIPs.</param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NCurrentTimeIndicator.NCurrentTimeIndicatorSchema">
            <summary>
            Schema associated with NCurrentTimeIndicator.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NFixedTimeIndicator">
            <summary>
            A schedule time indicator that shows a fixed point in time.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NFixedTimeIndicator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NFixedTimeIndicator.#ctor(System.DateTime,Nevron.Nov.Graphics.NColor)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="time">The time to paint this time indicator on.</param>
            <param name="fillColor">The fill color of the time indicator. For best results use
            a semi-transparent color, for example - new NColor(192, 0, 0, 160). 
            </param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NFixedTimeIndicator.#ctor(System.DateTime,Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="time">The time to paint this time indicator on.</param>
            <param name="fill">The fill style of the time indicator. For best results use a
            semi-transparent color fill, for example - new NColorFill(new NColor(192, 0, 0, 160)).</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NFixedTimeIndicator.#ctor(System.DateTime,Nevron.Nov.Graphics.NFill,System.Double)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="time">The time to paint this time indicator on.</param>
            <param name="fill">The fill style of the time indicator. For best results use a
            semi-transparent color fill, for example - new NColorFill(new NColor(192, 0, 0, 160)).</param>
            <param name="thickness">The time indicator thickness in DIPs.</param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NFixedTimeIndicator.Time">
            <summary>
            Gets/Sets the date and time of this schedule indicator. By default set to <see cref="F:System.DateTime.MinValue"/>.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NFixedTimeIndicator.NFixedTimeIndicatorSchema">
            <summary>
            Schema associated with NFixedTimeIndicator.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NFixedTimeIndicator.TimeProperty">
            <summary>
            Reference to the Time property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NFixedTimeIndicator.NFixedTimeIndicatorDesigner">
            <summary>
            Designer for fixed schedule time indicators.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NFixedTimeIndicatorCollection">
            <summary>
            Represents a collection of schedule fixed time indicators.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NFixedTimeIndicatorCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NFixedTimeIndicatorCollection.NFixedTimeIndicatorCollectionSchema">
            <summary>
            Schema associated with NFixedTimeIndicatorCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTimeIndicator">
            <summary>
            Base class for schedule time indicators.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeIndicator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeIndicator.#ctor(Nevron.Nov.Graphics.NColor)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="fillColor">The fill color of the time indicator. For best results use
            a semi-transparent color, for example - new NColor(192, 0, 0, 160). 
            </param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeIndicator.#ctor(Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="fill">The fill style of the time indicator. For best results use a
            semi-transparent color fill, for example - new NColorFill(new NColor(192, 0, 0, 160)).</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeIndicator.#ctor(Nevron.Nov.Graphics.NFill,System.Double)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="fill">The fill style of the time indicator. For best results use a
            semi-transparent color fill, for example - new NColorFill(new NColor(192, 0, 0, 160)).</param>
            <param name="thickness">The time indicator thickness in DIPs.</param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NTimeIndicator.Visible">
            <summary>
            Gets/Sets whether the time indicator is visible.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NTimeIndicator.Fill">
            <summary>
            Gets/Sets the fill style of the time indicator. For best results set it to a
            semi-transparent color fill, for example - new NColorFill(new NColor(192, 0, 0, 160)).
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NTimeIndicator.Thickness">
            <summary>
            Gets/Sets the time indicator thickness in DIPs. By default set to 2.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeIndicator.Paint(Nevron.Nov.Dom.NPaintVisitor,System.DateTime)">
            <summary>
            Paints this time indicator at the specified point in time.
            The default implementation of this method calculates the time indicator bounds based on the given dateTime
            and then calls the <see cref="M:Nevron.Nov.Schedule.NTimeIndicator.Paint(Nevron.Nov.Dom.NPaintVisitor,Nevron.Nov.Layout.ENHVOrientation,Nevron.Nov.Graphics.NRectangle,System.DateTime)"/> method.
            </summary>
            <param name="visitor"></param>
            <param name="dateTime">The point in time at which to paint the time indicator.</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeIndicator.Paint(Nevron.Nov.Dom.NPaintVisitor,Nevron.Nov.Layout.ENHVOrientation,Nevron.Nov.Graphics.NRectangle,System.DateTime)">
            <summary>
            Paints this time indicator in the specified bounds.
            </summary>
            <param name="visitor"></param>
            <param name="orientation"></param>
            <param name="dayBounds"></param>
            <param name="dateTime"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTimeIndicator.NTimeIndicatorSchema">
            <summary>
            Schema associated with NTimeIndicator.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTimeIndicator.VisibleProperty">
            <summary>
            Reference to the Visible property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTimeIndicator.FillProperty">
            <summary>
            Reference to the Fill property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTimeIndicator.ThicknessProperty">
            <summary>
            Reference to the Thickness property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTimeIndicator.NTimeIndicatorDesigner">
            <summary>
            Designer of schedule time indicators.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeIndicator.NTimeIndicatorDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentTag">
            <summary>
            Base class for all appointment tags like categories and time markers.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.#ctor(System.String)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name">The name of the tag.</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.#ctor(System.String,Nevron.Nov.Graphics.NColor)">
            <summary>
            Creates an appointment tag using the given base color and setting
            the highlighted and selected states to darker variants of this color.
            </summary>
            <param name="name"></param>
            <param name="color"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.#ctor(System.String,Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name">The name of the tag.</param>
            <param name="fill">The fill to apply to appointments of this tag.</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.#ctor(System.String,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name">The name of the tag.</param>
            <param name="fill">The fill to apply to appointments of this tag.</param>
            <param name="highlightFill">The fill to apply to appointments of this tag when highlighted.</param>
            <param name="selectedFill">The fill to apply to appointment of this tag when selected.</param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentTag.AssociatedAppointmentProperty">
            <summary>
            Gets the appointment property associated with this tag.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentTag.Name">
            <summary>
            Gets/Sets the name of this appointment tag.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentTag.Fill">
            <summary>
            Gets/Sets the fill style to apply to appointments of this tag.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentTag.HighlightFill">
            <summary>
            Gets/Sets the fill style to apply to appointments of this tag when highlighted,
            for example when the mouse pointer is over them.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentTag.SelectedFill">
            <summary>
            Gets/Sets the fill style to apply to appointments of this tag when selected.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.OnRegistered">
            <summary>
            Called after the document node is registered in its owner document.
            Overriden to add the style rules of this appointment tag to its owner document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.OnNameChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Name property has changed. Updates the style rules for this appointment tag.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.BuildSelector(Nevron.Nov.Dom.NSelectorBuilder)">
            <summary>
            Builds the selector for the normal state of the appointments.
            </summary>
            <param name="sb"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.BuildHighlighedSelector(Nevron.Nov.Dom.NSelectorBuilder)">
            <summary>
            Builds the selector for the highlighted state of the appointments.
            </summary>
            <param name="sb"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentTag.BuildSelectedSelector(Nevron.Nov.Dom.NSelectorBuilder)">
            <summary>
            Builds the selector for the selected state of the appointments.
            </summary>
            <param name="sb"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentTag.NAppointmentTagSchema">
            <summary>
            Schema associated with NAppointmentTag.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentTag.NameProperty">
            <summary>
            Reference to the Name property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentTag.FillProperty">
            <summary>
            Reference to the Fill property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentTag.HighlightFillProperty">
            <summary>
            Reference to the HighlightFill property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentTag.SelectedFillProperty">
            <summary>
            Reference to the SelectedFill property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NCategory">
            <summary>
            Represents an appointment category.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCategory.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCategory.#ctor(System.String)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name">The name of the category.</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCategory.#ctor(System.String,Nevron.Nov.Graphics.NColor)">
            <summary>
            Creates an appointment category using the given base color and setting
            the highlighted and selected states to darker variants of this color.
            </summary>
            <param name="name"></param>
            <param name="color"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCategory.#ctor(System.String,Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name">The name of the category.</param>
            <param name="fill">The fill to apply to appointments of this category.</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCategory.#ctor(System.String,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name">The name of the category.</param>
            <param name="fill">The fill to apply to appointments of this category.</param>
            <param name="highlightFill">The fill to apply to appointments of this category when highlighted.</param>
            <param name="selectedFill">The fill to apply to appointment of this category when selected.</param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NCategory.AssociatedAppointmentProperty">
            <summary>
            Gets the appointment property associated with this tag.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NCategory.NCategorySchema">
            <summary>
            Schema associated with NCategory.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NCategoryCollection">
            <summary>
            A collection of appointment categories.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCategoryCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCategoryCollection.FindByName(System.String)">
            <summary>
            Finds the category with the given name. Returns null if a category with such name
            does not exist in this collection.
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCategoryCollection.IndexOf(System.String)">
            <summary>
            Finds the index in this collection of the category with the given name.
            Returns -1 if a category with such name does not exist in the collection.
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NCategoryCollection.OnChildInserting(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Overriden to throw an exception if a category with name equal to the name of
            the one to be inserted already exists in the collection.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NCategoryCollection.NCategoryCollectionSchema">
            <summary>
            Schema associated with NCategoryCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTimeMarker">
            <summary>
            Represents an appointment time marker.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarker.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarker.#ctor(System.String)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name">The name of the time marker.</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarker.#ctor(System.String,Nevron.Nov.Graphics.NColor)">
            <summary>
            Creates an appointment tag using the given base color and setting
            the highlighted and selected states to darker variants of this color.
            </summary>
            <param name="name"></param>
            <param name="color"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarker.#ctor(System.String,Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name">The name of the time marker.</param>
            <param name="fill">The fill to apply to appointments of this time marker.</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarker.#ctor(System.String,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="name">The name of the time marker.</param>
            <param name="fill">The fill to apply to appointments of this time marker.</param>
            <param name="highlightFill">The fill to apply to appointments of this time marker when highlighted.</param>
            <param name="selectedFill">The fill to apply to appointment of this time marker when selected.</param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NTimeMarker.AssociatedAppointmentProperty">
            <summary>
            Gets the appointment property associated with this tag.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarker.BuildSelector(Nevron.Nov.Dom.NSelectorBuilder)">
            <summary>
            Builds the selector for the normal state of the appointments.
            </summary>
            <param name="sb"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTimeMarker.NTimeMarkerSchema">
            <summary>
            Schema associated with NTimeMarker.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTimeMarkerCollection">
            <summary>
            A collection of appointment time markers.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarkerCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarkerCollection.FindByName(System.String)">
            <summary>
            Finds the time marker with the given name. Returns null if a time marker with such name
            does not exist in this collection.
            </summary>
            <param name="timeMarkerName"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarkerCollection.IndexOf(System.String)">
            <summary>
            Finds the index in this collection of the time marker with the given name.
            Returns -1 if a time marker with such name does not exist in the collection.
            </summary>
            <param name="timeMarkerName"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimeMarkerCollection.OnChildInserting(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Overriden to throw an exception if a time marker with name equal to the name of
            the one to be inserted already exists in the collection.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTimeMarkerCollection.NTimeMarkerCollectionSchema">
            <summary>
            Schema associated with NTimeMarkerCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NDayBasedViewMode">
            <summary>
            Base class for day and week view modes.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayBasedViewMode.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NDayBasedViewMode.DatesOrientation">
            <summary>
            Gets the orientation of the days of this view mode.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayBasedViewMode.ArrangeAppointments(Nevron.Nov.Schedule.NSchedule,Nevron.Nov.DataStructures.NList{Nevron.Nov.Schedule.NAppointmentBase},Nevron.Nov.DataStructures.NStack{System.Object},Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the given appointments.
            </summary>
            <param name="schedule"></param>
            <param name="appointments"></param>
            <param name="groupingValues"></param>
            <param name="layoutArea"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayBasedViewMode.GetDefaultLogicalLength">
            <summary>
            Gets the default logical length of the schedule for this view mode settings.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NDayBasedViewMode.NDayBasedViewModeSchema">
            <summary>
            Schema associated with NDayBasedViewMode.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NDayViewMode">
            <summary>
            Schedule day view mode.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayViewMode.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NDayViewMode.ViewMode">
            <summary>
            Gets the view mode enumeration value that corresponds to this schedule view mode settings.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NDayViewMode.GetStartDate(System.DateTime)">
            <summary>
            Gets the start date of the view mode range the given date is in.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NDayViewMode.NDayViewModeSchema">
            <summary>
            Schema associated with NDayViewMode.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NMonthViewMode">
            <summary>
            Schedule month view mode.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NMonthViewMode.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NMonthViewMode.ViewMode">
            <summary>
            Gets the view mode enumeration value that corresponds to this schedule view mode settings.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NMonthViewMode.DatesOrientation">
            <summary>
            Gets the orientation of the days of this view mode.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NMonthViewMode.GetStartDate(System.DateTime)">
            <summary>
            Gets the start date of the view mode range the given date is in.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NMonthViewMode.GetRulerStartDate(System.DateTime)">
            <summary>
            Gets the start date of the ruler for the given target date.
            </summary>
            <param name="targetDate"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NMonthViewMode.ArrangeAppointments(Nevron.Nov.Schedule.NSchedule,Nevron.Nov.DataStructures.NList{Nevron.Nov.Schedule.NAppointmentBase},Nevron.Nov.DataStructures.NStack{System.Object},Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the given appointments.
            </summary>
            <param name="schedule"></param>
            <param name="appointments"></param>
            <param name="groupingValues"></param>
            <param name="layoutArea"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NMonthViewMode.GetDefaultLogicalLength">
            <summary>
            Gets the default logical length of the schedule for this view mode settings.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NMonthViewMode.NMonthViewModeSchema">
            <summary>
            Schema associated with NMonthViewMode.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTimelineViewMode">
            <summary>
            Schedule timeline view mode mode.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimelineViewMode.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NTimelineViewMode.ViewMode">
            <summary>
            Gets the view mode enumeration value that corresponds to this schedule view mode settings.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NTimelineViewMode.DatesOrientation">
            <summary>
            Gets the orientation of the dates of this view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NTimelineViewMode.Duration">
            <summary>
            Gets the duration of the view mode in days.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimelineViewMode.GetStartDate(System.DateTime)">
            <summary>
            Gets the start date of the view mode range the given date is in.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimelineViewMode.GetRulerStartDate(System.DateTime)">
            <summary>
            Gets the start date of the ruler for the given date.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimelineViewMode.SetDuration(System.Int32)">
            <summary>
            Sets the duration of the view mode in days.
            </summary>
            <param name="days">The duration of the view mode in days.
            Should be greater than or equal to 1.</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimelineViewMode.ArrangeAppointments(Nevron.Nov.Schedule.NSchedule,Nevron.Nov.DataStructures.NList{Nevron.Nov.Schedule.NAppointmentBase},Nevron.Nov.DataStructures.NStack{System.Object},Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the given appointments.
            </summary>
            <param name="schedule"></param>
            <param name="appointments"></param>
            <param name="groupingValues"></param>
            <param name="layoutArea"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimelineViewMode.GetDefaultLogicalLength">
            <summary>
            Gets the default logical length of the schedule for this view mode settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimelineViewMode.OnDurationChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Duration property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTimelineViewMode.NTimelineViewModeSchema">
            <summary>
            Schema associated with NTimelineViewMode.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTimelineViewMode.DurationProperty">
            <summary>
            Reference to the Duration property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTimelineViewMode.NTimelineViewModeDesigner">
            <summary>
            Designer for timeline view modes.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTimelineViewMode.NTimelineViewModeDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NViewMode">
            <summary>
            Base class for all schedule view modes.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NViewMode.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NViewMode.ViewMode">
            <summary>
            Gets the view mode enumeration value that corresponds to this schedule view mode settings.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NViewMode.DatesOrientation">
            <summary>
            Gets the orientation of the dates of this view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NViewMode.Duration">
            <summary>
            Gets the duration of the view mode in days.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NViewMode.Groupings">
            <summary>
            Gets/Sets the Groupings child.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NViewMode.Orientation">
            <summary>
            Gets/Sets the orientation of the view when in this view mode.
            The orientation coincides with the orientation of the time ruler and
            is opposite to the orientation of the header.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NViewMode.LogicalLength">
            <summary>
            Gets/Sets the logical length of the schedule for this view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NViewMode.Width">
            <summary>
            Gets/Sets the width of this view mode.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NViewMode.Height">
            <summary>
            Gets/Sets the height of this view mode.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NViewMode.GetStartDate(System.DateTime)">
            <summary>
            Gets the start date of the view mode range the given date is in.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NViewMode.GetRulerStartDate(System.DateTime)">
            <summary>
            Gets the start date of the ruler for the given date.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NViewMode.GetEndDate(System.DateTime)">
            <summary>
            Gets the end date of the view for the current date of the owner schedule.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NViewMode.ArrangeAppointments(Nevron.Nov.Schedule.NSchedule,Nevron.Nov.DataStructures.NList{Nevron.Nov.Schedule.NAppointmentBase},Nevron.Nov.DataStructures.NStack{System.Object},Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the given appointments.
            </summary>
            <param name="schedule"></param>
            <param name="appointments"></param>
            <param name="groupingValues"></param>
            <param name="layoutArea"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NViewMode.GetDefaultLogicalLength">
            <summary>
            Gets the default logical length of the schedule for this view mode settings.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NViewMode.NViewModeSchema">
            <summary>
            Schema associated with NViewMode.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NViewMode.GroupingsChild">
            <summary>
            Reference to the Groupings child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NViewMode.OrientationProperty">
            <summary>
            Reference to the Orientation property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NViewMode.LogicalLengthProperty">
            <summary>
            Reference to the LogicalLength property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NViewMode.WidthProperty">
            <summary>
            Reference to the Width property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NViewMode.HeightProperty">
            <summary>
            Reference to the Height property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NViewMode.NViewModeDesigner">
            <summary>
            Designer for view modes.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NViewMode.NViewModeDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NViewMode.NViewModeDesigner.GetChildrenBrowsable(Nevron.Nov.Dom.NNode)">
            <summary>
            Overriden to return false.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.NWeekViewMode">
            <summary>
            Schedule week view mode.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NWeekViewMode.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NWeekViewMode.ViewMode">
            <summary>
            Gets the view mode enumeration value that corresponds to this schedule view mode settings.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NWeekViewMode.GetStartDate(System.DateTime)">
            <summary>
            Gets the start date of the view mode for the given date.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NWeekViewMode.NWeekViewModeSchema">
            <summary>
            Schema associated with NWeekViewMode.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.ENScheduleViewMode">
            <summary>
            Enumerates the schedule view modes.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleViewMode.Day">
            <summary>
            Day view - the schedule view shows 1 day.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleViewMode.Timeline">
            <summary>
            Timeline view - the schedule view shows a specified number of days (by default 5).
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleViewMode.Week">
            <summary>
            Week view - the schedule view shows 7 days.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleViewMode.Month">
            <summary>
            Month view - the schedule view shows 42 days.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.ENScheduleInteractivity">
            <summary>
            Enumerates the schedule interactivity options. This is a masked enum.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleInteractivity.None">
            <summary>
            All interactivity options are disabled.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleInteractivity.Move">
            <summary>
            Moving of appointments through dragging.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleInteractivity.Resize">
            <summary>
            Resizing of appointments through dragging its start and end points.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleInteractivity.Edit">
            <summary>
            Editing of appointment properties through a dialog.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleInteractivity.Snap">
            <summary>
            Snapping of appointments to time intervals when moved or resized.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENScheduleInteractivity.All">
            <summary>
            All interactivity options are enabled.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.ENRecurrenceFrequency">
            <summary>
            Enumerates the recurrence frequencies.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrenceFrequency.Hourly">
            <summary>
            Represents a recurrence that occurs every hour.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrenceFrequency.Daily">
            <summary>
            Represents a recurrence that occurs every day.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrenceFrequency.Weekly">
            <summary>
            Represents a recurrence that occurs every week.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrenceFrequency.Monthly">
            <summary>
            Represents a recurrence that occurs every month.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrenceFrequency.Yearly">
            <summary>
            Represents a recurrence that occurs every year.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.ENDayOfWeek">
            <summary>
            Enumerates the week days. This is a masked enum.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.Monday">
            <summary>
            Monday.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.Tuesday">
            <summary>
            Tuesday.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.Wednesday">
            <summary>
            Wednesday.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.Thursday">
            <summary>
            Thursday.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.Friday">
            <summary>
            Friday.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.Saturday">
            <summary>
            Saturday.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.Sunday">
            <summary>
            Sunday.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.Weekdays">
            <summary>
            All days from Monday to Friday.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.Weekend">
            <summary>
            Saturday and Sunday.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOfWeek.WholeWeek">
            <summary>
            Every day in the week.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.ENMonth">
            <summary>
            Enumerates the months. This is a masked enum.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.January">
            <summary>
            January.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.February">
            <summary>
            February.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.March">
            <summary>
            March.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.April">
            <summary>
            April.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.May">
            <summary>
            May.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.June">
            <summary>
            June.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.July">
            <summary>
            July.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.August">
            <summary>
            August.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.September">
            <summary>
            September.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.October">
            <summary>
            October.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.November">
            <summary>
            November.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENMonth.December">
            <summary>
            December.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.ENDayOrdinal">
            <summary>
            Enumerates the supported day ordinal values.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOrdinal.First">
            <summary>
            Represents the first day, which matches a given criteria.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOrdinal.Second">
            <summary>
            Represents the second day, which matches a given criteria.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOrdinal.Third">
            <summary>
            Represents the third day, which matches a given criteria.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOrdinal.Fourth">
            <summary>
            Represents the fourth day, which matches a given criteria.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOrdinal.Last">
            <summary>
            Represents the last day, which matches a given criteria.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENDayOrdinal.Every">
            <summary>
            Represents every day, which matches a given criteria.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.ENRecurrencePatternType">
            <summary>
            Enumerates the recurrence pattern types.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrencePatternType.Absolute">
            <summary>
            Represents an absolute recurrence pattern, for example: "every May 7".
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrencePatternType.Relative">
            <summary>
            Represents a relative recurrence pattern, for example: "every last Sunday of June".
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.ENRecurrenceEndMode">
            <summary>
            Enumerates the supported recurrence range end modes.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrenceEndMode.Never">
            <summary>
            The recurrence never ends.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrenceEndMode.ByDate">
            <summary>
            The recurrence ends at a specific date.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.ENRecurrenceEndMode.AfterOccurrences">
            <summary>
            The recurrence ends after a given number of occurrences.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Formats.NIcalFormat">
            <summary>
            Represents the iCalendar format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Formats.NIcalFormat.Extensions">
            <summary>
            Gets the file extensions of the format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Formats.NIcalFormat.Mime">
            <summary>
            Gets the mime type.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Formats.NIcalFormat.Name">
            <summary>
            Gets the name of the format.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Formats.NIcalFormat.SerializeAppointment(Nevron.Nov.Schedule.NAppointmentBase,System.Boolean)">
            <summary>
            Serializes the given appointment as an iCalendar event component and
            returns the resulting string.
            </summary>
            <param name="appointment"></param>
            <param name="includeStampAndId"></param>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.Formats.NScheduleFormat">
            <summary>
            Base class for all schedule document formats.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Formats.NScheduleFormat.NevronBinary">
            <summary>
            Represents the Nevron Binary Calendar format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Formats.NScheduleFormat.NevronXml">
            <summary>
            Represents the Nevron XML Calendar format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Formats.NScheduleFormat.iCalendar">
            <summary>
            Represents the iCalendar format.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Formats.NScheduleFormatRegistry">
            <summary>
            A document format registry for schedule formats such as iCalendar format (".ics").
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Formats.NScheduleFormatRegistry.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.Formats.NScheduleFormatRegistry.DefaultFormatExtension">
            <summary>
            Gets the fallback format extension for schedule documents.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Formats.NScheduleFormatRegistry.GetDocumentTypeName">
            <summary>
            Gets the document type name of this format registry.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.Formats.NScheduleLoadSettings">
            <summary>
            Contains schedule load settings.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Formats.NScheduleSaveSettings">
            <summary>
            Contains schedule save settings.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleModule">
            <summary>
            Represents the Nevron schedule module.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleModule.Install">
            <summary>
            Installs this module.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleModule.Instance">
            <summary>
            Gets the instance of this module.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NResources">
            <summary>
            DO NOT MODIFY MANUALLY. Automatically generated by NResourceMaker.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NResources.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Edit_AddAppointment_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Edit_DeleteAppointment_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Edit_EditAppointment_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Edit_ImportAppointments_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Other_Calendar_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Other_NevronCalendarLogo_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Other_NevronCalendar_16x16_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Other_NevronCalendar_32x32_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_AddAppointment_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_DeleteAppointment_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_EditAppointment_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_GoogleCalendar_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_GoToNextRange_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_GoToPreviousRange_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_GoToToday_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_Groupings_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_Groups_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_ImportAppointments_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_OrientationHorizontal_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_OrientationVertical_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_ViewModeDay_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_ViewModeMonth_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_ViewModeTimeline_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_ViewModeWeek_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_AppMenu_Formats_ICS_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_AppMenu_Formats_NSB_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_AppMenu_Formats_NSX_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Ribbon_32x32_AppMenu_Formats_PDF_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Tools_CloudSync_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Tools_GoogleCalendar_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Tools_Grid_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Tools_Groupings_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Tools_Groups_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Tools_Header_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Tools_TimeIndicator_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Tools_TimeRuler_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_Tools_ToolSettings_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_View_GoToNextRange_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_View_GoToPreviousRange_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_View_GoToToday_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_View_OrientationHorizontal_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_View_OrientationVertical_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_View_ViewModeDay_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_View_ViewModeMonth_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_View_ViewModeTimeline_png">
            <summary></summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NResources.Image_View_ViewModeWeek_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RBIN_documentation_zip">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Edit_AddAppointment_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Edit_DeleteAppointment_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Edit_EditAppointment_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Edit_ImportAppointments_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Other_Calendar_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Other_NevronCalendarLogo_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Other_NevronCalendar_16x16_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Other_NevronCalendar_32x32_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_AddAppointment_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_DeleteAppointment_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_EditAppointment_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_GoogleCalendar_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_GoToNextRange_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_GoToPreviousRange_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_GoToToday_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_Groupings_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_Groups_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_ImportAppointments_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_OrientationHorizontal_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_OrientationVertical_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_ViewModeDay_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_ViewModeMonth_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_ViewModeTimeline_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_ViewModeWeek_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_AppMenu_Formats_ICS_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_AppMenu_Formats_NSB_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_AppMenu_Formats_NSX_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Ribbon_32x32_AppMenu_Formats_PDF_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Tools_CloudSync_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Tools_GoogleCalendar_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Tools_Grid_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Tools_Groupings_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Tools_Groups_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Tools_Header_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Tools_TimeIndicator_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Tools_TimeRuler_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_Tools_ToolSettings_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_View_GoToNextRange_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_View_GoToPreviousRange_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_View_GoToToday_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_View_OrientationHorizontal_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_View_OrientationVertical_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_View_ViewModeDay_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_View_ViewModeMonth_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_View_ViewModeTimeline_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.RIMG_View_ViewModeWeek_png">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NResources.Instance">
            <summary>
            Singleton instance.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NResourcesData1">
            <summary>
            DO NOT MODIFY MANUALLY. Automatically generated by NResourceMaker.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleTheme">
            <summary>
            Represents a theme for a schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTheme.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTheme.#ctor(Nevron.Nov.Graphics.NColor)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="appointmentBackgroundColor"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTheme.GetThemeType">
            <summary>
            Gets the type of this theme.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTheme.CreateTheme">
            <summary>
            Creates the styles for this theme.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTheme.CreateAppointmentWidgetStyles">
            <summary>
            Creates the appointment widget styles.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTheme.CreateAppointmentWidgetHeaderStyles">
            <summary>
            Creates the appointment header widget styles.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTheme.IsSelectedState">
            <summary>
            Matches elements with an NStylePropertyEx.IsSelectedPropertyEx extended property equal to true.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTheme.IsHighlightedState">
            <summary>
            Matches elements with an NStylePropertyEx.IsHighlightedPropertyEx extended property equal to true.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTheme.InAppointmentContext">
            <summary>
            Matches a widget, direct child of an appointment.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTheme.InAppointmentWidgetContext">
            <summary>
            Matches a widget, direct child of an appointment widget.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTheme.NScheduleThemeSchema">
            <summary>
            Schema associated with NScheduleTheme.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleTheme.AppointmentHeaderThickness">
            <summary>
            Gets/Sets the appointnemt header thickness (which determines the thickness of time markers).
            By default set to 5. This property should be set before applying the schedule theme,
            for example in the entry point of the application.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTheme.ThemeType">
            <summary>
            The theme type.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleUIThemePlugin">
            <summary>
            A theme plugin that styles the Nevron Schedule control.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleUIThemePlugin.CreateStyles(Nevron.Nov.UI.NUITheme)">
            <summary>
            Creates the styles for the Nevron Schedule control.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleUIThemePlugin.CreateNavigatorStyles(Nevron.Nov.UI.NUITheme)">
            <summary>
            Creates the navigator styles.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleUIThemePlugin.CreateHeaderStyles(Nevron.Nov.UI.NUITheme)">
            <summary>
            Creates the header styles.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleUIThemePlugin.CreateTimeRulerStyles(Nevron.Nov.UI.NUITheme)">
            <summary>
            Creates the time ruler styles.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleUIThemePlugin.CreateGridStyles(Nevron.Nov.UI.NUITheme)">
            <summary>
            Creates the schedule grid styles.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleUIThemePlugin.CreateTagSelectorStyles(Nevron.Nov.UI.NUITheme)">
            <summary>
            Creates the tag selector styles.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleUIThemePlugin.CreatePreviewStyles(Nevron.Nov.UI.NUITheme)">
            <summary>
            Creates the preview styles.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleUIThemePlugin.HeaderFont(Nevron.Nov.UI.NUITheme,Nevron.Nov.Dom.NThemeStyle)">
            <summary>
            Adds a header font declaration to the given style. Used by the header, time ruler and the grid.
            </summary>
            <param name="theme"></param>
            <param name="style"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NEditMenuBuilder">
            <summary>
            Creates the Nevron Schedule "Edit" menu.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NEditMenuBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NEditMenuBuilder.AddItems(Nevron.Nov.UI.NMenuItemCollection)">
            <summary>
            Adds the menu items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NFileMenuBuilder">
            <summary>
            Creates the Nevron Schedule "File" menu.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NFileMenuBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NFileMenuBuilder.AddItems(Nevron.Nov.UI.NMenuItemCollection)">
            <summary>
            Adds the menu items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NToolsMenuBuilder">
            <summary>
            Creates the Nevron Schedule "Tools" menu.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NToolsMenuBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NToolsMenuBuilder.AddItems(Nevron.Nov.UI.NMenuItemCollection)">
            <summary>
            Adds the menu items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NViewMenuBuilder">
            <summary>
            Creates the Nevron Schedule "View" menu.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NViewMenuBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NViewMenuBuilder.AddItems(Nevron.Nov.UI.NMenuItemCollection)">
            <summary>
            Adds the menu items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NScheduleStatusBarBuilder">
            <summary>
            Creates the Nevron Schedule status bar.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NScheduleStatusBarBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NScheduleStatusBarBuilder.Create">
            <summary>
            Creates the Nevron Schedule status bar.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NAppointmentsToolBarBuilder">
            <summary>
            Creates the Nevron Schedule "Appointments" toolbar.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NAppointmentsToolBarBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NAppointmentsToolBarBuilder.AddItems(Nevron.Nov.UI.NCommandBarItemCollection)">
            <summary>
            Adds the toolbar builders.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NInteractivityToolBarBuilder">
            <summary>
            Creates the Nevron Schedule "Interactivity" toolbar.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NInteractivityToolBarBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NInteractivityToolBarBuilder.AddItems(Nevron.Nov.UI.NCommandBarItemCollection)">
            <summary>
            Adds the items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NStandardToolBarBuilder">
            <summary>
            Creates the Nevron Schedule "Standard" toolbar.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NStandardToolBarBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NStandardToolBarBuilder.AddItems(Nevron.Nov.UI.NCommandBarItemCollection)">
            <summary>
            Adds the toolbar items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NToolsToolBarBuilder">
            <summary>
            Creates the Nevron Schedule "Tools" toolbar.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NToolsToolBarBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NToolsToolBarBuilder.AddItems(Nevron.Nov.UI.NCommandBarItemCollection)">
            <summary>
            Adds the toolbar items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NViewToolBarBuilder">
            <summary>
            Creates the view toolbar of the Nevron schedule view.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NViewToolBarBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NViewToolBarBuilder.AddItems(Nevron.Nov.UI.NCommandBarItemCollection)">
            <summary>
            Adds the toolbar items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NAppointmentAppointmentsGroupBuilder">
            <summary>
            Creates the Nevron Schedule "Appointments" ribbon group of the "Appointment" tab.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NAppointmentAppointmentsGroupBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NAppointmentAppointmentsGroupBuilder.AddRibbonGroupItems(Nevron.Nov.UI.NRibbonGroupItemCollection)">
            <summary>
            Adds the ribbon group items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NAppointmentTabPageBuilder">
            <summary>
            Creates the Nevron Schedule ribbon "Appointment" tab page.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NAppointmentTabPageBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NAppointmentTabPageBuilder.AddRibbonGroupBuilders(Nevron.Nov.UI.NCommandBuilderCollection{Nevron.Nov.UI.NRibbonGroupBuilder})">
            <summary>
            Adds the ribbon group builders.
            </summary>
            <param name="ribbonGroupBuilders"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.UI.NAppointmentTabPageBuilder.GroupAppointmentsName">
            <summary>
            The name of the "Appointments" ribbon group.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.UI.NAppointmentTabPageBuilder.GroupTagsName">
            <summary>
            The name of the "Tags" ribbon group.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NAppointmentTagsGroupBuilder">
            <summary>
            Creates the Nevron Schedule "Tags" ribbon group of the "Appointment" tab.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NAppointmentTagsGroupBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NAppointmentTagsGroupBuilder.AddRibbonGroupItems(Nevron.Nov.UI.NRibbonGroupItemCollection)">
            <summary>
            Adds the ribbon group items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NHomeEditingGroupBuilder">
            <summary>
            Creates the Nevron Schedule "Editing" ribbon group of the "Home" tab.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeEditingGroupBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeEditingGroupBuilder.AddRibbonGroupItems(Nevron.Nov.UI.NRibbonGroupItemCollection)">
            <summary>
            Adds the ribbon group items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeEditingGroupBuilder.CreateSplitButton``1(Nevron.Nov.Graphics.NImage,Nevron.Nov.Graphics.NImage,Nevron.Nov.UI.NCommand)">
            <summary>
            Creates a split button.
            </summary>
            <typeparam name="fYUG"></typeparam>
            <param name="image"></param>
            <param name="moreOptionsImage"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NHomeGoToGroupBuilder">
            <summary>
            Creates the Nevron Schedule "Go To" ribbon group of the "Home" tab.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeGoToGroupBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeGoToGroupBuilder.AddRibbonGroupItems(Nevron.Nov.UI.NRibbonGroupItemCollection)">
            <summary>
            Adds the ribbon group items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NHomeOrientationGroupBuilder">
            <summary>
            Creates the Nevron Schedule "Orientation" ribbon group of the "Home" tab.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeOrientationGroupBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeOrientationGroupBuilder.AddRibbonGroupItems(Nevron.Nov.UI.NRibbonGroupItemCollection)">
            <summary>
            Adds the ribbon group items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NHomeTabPageBuilder">
            <summary>
            Creates the Nevron Schedule ribbon "Home" tab page.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeTabPageBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeTabPageBuilder.AddRibbonGroupBuilders(Nevron.Nov.UI.NCommandBuilderCollection{Nevron.Nov.UI.NRibbonGroupBuilder})">
            <summary>
            Adds the ribbon group builders.
            </summary>
            <param name="ribbonGroupBuilders"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.UI.NHomeTabPageBuilder.GroupEditingName">
            <summary>
            The name of the Editing ribbon group.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.UI.NHomeTabPageBuilder.GroupGoToName">
            <summary>
            The name of the Go To ribbon group.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.UI.NHomeTabPageBuilder.GroupOrientationName">
            <summary>
            The name of the Orientation ribbon group.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.UI.NHomeTabPageBuilder.GroupViewName">
            <summary>
            The name of the View ribbon group.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NHomeViewGroupBuilder">
            <summary>
            Creates the Nevron Schedule "View" ribbon group of the "Home" tab.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeViewGroupBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NHomeViewGroupBuilder.AddRibbonGroupItems(Nevron.Nov.UI.NRibbonGroupItemCollection)">
            <summary>
            Adds the ribbon group items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NSettingsGroupingsGroupBuilder">
            <summary>
            Creates the Nevron Schedule "Groups" ribbon group of the "Settings" tab.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NSettingsGroupingsGroupBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NSettingsGroupingsGroupBuilder.AddRibbonGroupItems(Nevron.Nov.UI.NRibbonGroupItemCollection)">
            <summary>
            Adds the ribbon group items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NSettingsInteractivityGroupBuilder">
            <summary>
            Creates the Nevron Schedule "Interactivity" ribbon group of the "Settings" tab.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NSettingsInteractivityGroupBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NSettingsInteractivityGroupBuilder.AddRibbonGroupItems(Nevron.Nov.UI.NRibbonGroupItemCollection)">
            <summary>
            Adds the ribbon group items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NSettingsTabPageBuilder">
            <summary>
            Creates the Nevron Schedule "Settings" tab page.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NSettingsTabPageBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NSettingsTabPageBuilder.AddRibbonGroupBuilders(Nevron.Nov.UI.NCommandBuilderCollection{Nevron.Nov.UI.NRibbonGroupBuilder})">
            <summary>
            Adds the ribbon group builders.
            </summary>
            <param name="ribbonGroupBuilders"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.UI.NSettingsTabPageBuilder.GroupGroupingsName">
            <summary>
            The name of the Groupings ribbon group.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.UI.NSettingsTabPageBuilder.GroupInteractivityName">
            <summary>
            The name of the Interactivity ribbon group.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.UI.NSettingsTabPageBuilder.GroupWidgetsName">
            <summary>
            The name of the Widgets ribbon group.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.UI.NSettingsWidgetsGroupBuilder">
            <summary>
            Creates the Nevron Schedule "Widgets" ribbon group of the "Settings" tab.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NSettingsWidgetsGroupBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.UI.NSettingsWidgetsGroupBuilder.AddRibbonGroupItems(Nevron.Nov.UI.NRibbonGroupItemCollection)">
            <summary>
            Adds the ribbon group items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleCommandBarBuilder">
            <summary>
            Creates the Nevron Schedule command bars.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.AddMenuDropDownBuilders(Nevron.Nov.UI.NCommandBuilderCollection{Nevron.Nov.UI.NMenuDropDownBuilder})">
            <summary>
            Creates the Nevron Schedule menu drop down builders.
            </summary>
            <param name="menuBuilders"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.AddToolBarBuilders(Nevron.Nov.UI.NCommandBuilderCollection{Nevron.Nov.UI.NToolBarBuilder})">
            <summary>
            Creates the Nevron Schedule toolbar builders.
            </summary>
            <param name="toolBarBuilders"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.CreateStatusBarBuilder">
            <summary>
            Creates the Nevron Schedule status bar builder.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.ToolbarAppointmentsName">
            <summary>
            The name of the Appointments toolbar.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.ToolbarInteractivityName">
            <summary>
            The name of the Interactivity toolbar.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.ToolbarStandardName">
            <summary>
            The name of the Standard toolbar.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.ToolbarToolsName">
            <summary>
            The name of the Tools toolbar.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.ToolbarViewName">
            <summary>
            The name of the View toolbar.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.MenuFileName">
            <summary>
            The name of the File menu.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.MenuEditName">
            <summary>
            The name of the Edit menu.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.MenuToolsName">
            <summary>
            The name of the Tools menu.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleCommandBarBuilder.MenuViewName">
            <summary>
            The name of the View menu.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleImageExportDialog">
            <summary>
            Represents the Schedule image export dialog.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleImageExportDialog.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleImageExportDialog.NScheduleImageExportDialogSchema">
            <summary>
            Schema associated with NScheduleImageExportDialog.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleRasterImageExporter">
            <summary>
            Exports a schedule to a raster image.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleRasterImageExporter.#ctor(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Default constructor.
            </summary>
            <param name="schedule"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleRasterImageExporter.GetDocumentContentBounds">
            <summary>
            Gets the bounds of the document content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleRasterImageExporter.CreateExportDialog(Nevron.Nov.UI.NWindow)">
            <summary>
            Creates the image export dialog.
            </summary>
            <param name="ownerWindow"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleRasterImageExporter.OnImageDocumentContentCreated(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Called when content of the export document has been initialized.
            </summary>
            <param name="schedule"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleVectorImageExporter">
            <summary>
            Exports a schedule document to a vector image such as SVG.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleVectorImageExporter.#ctor(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="schedule"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleVectorImageExporter.GetDocumentContentBounds">
            <summary>
            Gets the bounds of the document content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleVectorImageExporter.CreateExportDialog(Nevron.Nov.UI.NWindow)">
            <summary>
            Creates the image export dialog.
            </summary>
            <param name="ownerWindow"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleVectorImageExporter.OnImageDocumentContentCreated(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Called when content of the export document has been initialized.
            </summary>
            <param name="schedule"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentEditDialog">
            <summary>
            A dialog, which edits an appointment.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentEditDialog.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentEditDialog.Initialize(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Initializes the dialog for the given appointment.
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentEditDialog.Create(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Creates an edit dialog for the given appointment.
            </summary>
            <param name="appointment"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentEditDialog.NAppointmentEditDialogSchema">
            <summary>
            Schema associated with NAppointmentEditDialog.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NNotificationDialog">
            <summary>
            Represents an appointment notification dialog.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NNotificationDialog.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NNotificationDialog.AppointmentCount">
            <summary>
            Gets the number of the appointments in the list box of this dialog.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NNotificationDialog.AddAppointment(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Adds the given appointment to the list.
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NNotificationDialog.GetTextForListBox(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Gets the text to show in the list box for the given appointment.
            </summary>
            <param name="appointment"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NNotificationDialog.UpdateListBoxItemText(Nevron.Nov.UI.NListBoxItem)">
            <summary>
            Updates the text of the given list box item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NNotificationDialog.OnDismissAllButtonClick(Nevron.Nov.Dom.NEventArgs)">
            <summary>
            Called when the user clicks the "Dismiss All" button.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NNotificationDialog.OnDismissButtonClick(Nevron.Nov.Dom.NEventArgs)">
            <summary>
            Called when the user clicks the "Dismiss" button.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NNotificationDialog.OnOpenButtonClick(Nevron.Nov.Dom.NEventArgs)">
            <summary>
            Called when the user clicks the "Open" button.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NNotificationDialog.OnListBoxItemSelected(Nevron.Nov.UI.NSelectEventArgs{Nevron.Nov.UI.NListBoxItem})">
            <summary>
            Called when a list box item has been selected.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NNotificationDialog.OnListBoxItemDeselected(Nevron.Nov.UI.NSelectEventArgs{Nevron.Nov.UI.NListBoxItem})">
            <summary>
            Called when a list box item has been deselected.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NNotificationDialog.NNotificationDialogSchema">
            <summary>
            Schema associated with NNotificationDialog.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NSchedulePdfExporter">
            <summary>
            Exports a schedule document to PDF.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedulePdfExporter.#ctor(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="schedule"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.NSchedulePrintExporter">
            <summary>
            Prints a schedule document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NSchedulePrintExporter.#ctor(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="schedule"></param>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NRangeCategoryEditor">
            <summary>
            An editor for the appointment range category.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NRangeCategoryEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NRangeCategoryEditor.OnUpdateFromEditedNode">
            <summary>
            Updates the editor from the edited node.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NRangeCategoryEditor.PopulateStackPanel(Nevron.Nov.UI.NStackPanel,Nevron.Nov.DataStructures.NList{Nevron.Nov.Editors.NEditor})">
            <summary>
            Populates the given stack panel with the specified editors.
            </summary>
            <param name="stackPanel"></param>
            <param name="editors"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NRangeCategoryEditor.OnEditedNodeChanged(Nevron.Nov.Dom.NEventArgs)">
            <summary>
            Called when when any aspect of the edited node has changed.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NRangeCategoryEditor.NRangeCategoryEditorSchema">
            <summary>
            Schema associated with NRangeCategoryEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NAppointmentTagPropertyEditor`1">
            <summary>
            Base class for all appointment tag property editors.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NAppointmentTagPropertyEditor`1.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NAppointmentTagPropertyEditor`1.OnUpdateFromEditedNode">
            <summary>
            Updates the value control from the edited node.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NAppointmentTagPropertyEditor`1.CreateValueControl">
            <summary>
            Overriden to create an appointment tag split button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NAppointmentTagPropertyEditor`1.GetTagCollection(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the tag collection of the given schedule this editor can edit.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NAppointmentTagPropertyEditor`1.IndexOf(Nevron.Nov.DataStructures.INCollection{`0},System.String)">
            <summary>
            Gets the index of the tag with the given name in the specified collection.
            </summary>
            <param name="tags"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NAppointmentTagPropertyEditor`1.OnComboBoxSelectedIndexChanged(Nevron.Nov.Dom.NValueChangeEventArgs)">
            <summary>
            Called when the selected index of the tag combo box has changed.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NAppointmentTagPropertyEditor`1.NAppointmentTagPropertyEditorSchema">
            <summary>
            Schema associated with NAppointmentTagPropertyEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NCategoryPropertyEditor">
            <summary>
            A pair box property editor, which edits a property of type NCategory.
            The value control is an appointment tag combo box.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NCategoryPropertyEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NCategoryPropertyEditor.GetTagCollection(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the tag collection of the given schedule this editor can edit.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NCategoryPropertyEditor.IndexOf(Nevron.Nov.DataStructures.INCollection{Nevron.Nov.Schedule.NCategory},System.String)">
            <summary>
            Gets the index of the tag with the given name in the specified collection.
            </summary>
            <param name="tags"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NCategoryPropertyEditor.NCategoryPropertyEditorSchema">
            <summary>
            Schema associated with NCategoryPropertyEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NTimeMarkerPropertyEditor">
            <summary>
            A pair box property editor, which edits a property of type NTimeMarker.
            The value control is an appointment tag combo box.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NTimeMarkerPropertyEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NTimeMarkerPropertyEditor.GetTagCollection(Nevron.Nov.Schedule.NSchedule)">
            <summary>
            Gets the tag collection of the given schedule this editor can edit.
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NTimeMarkerPropertyEditor.IndexOf(Nevron.Nov.DataStructures.INCollection{Nevron.Nov.Schedule.NTimeMarker},System.String)">
            <summary>
            Gets the index of the tag with the given name in the specified collection.
            </summary>
            <param name="tags"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NTimeMarkerPropertyEditor.NTimeMarkerPropertyEditorSchema">
            <summary>
            Schema associated with NTimeMarkerPropertyEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NAppointmentGroupCollectionEditor">
            <summary>
            An editor for appointment group collection.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NAppointmentGroupCollectionEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NAppointmentGroupCollectionEditor.CreateControl">
            <summary>
            Creates the control, which should edit the current node.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NAppointmentGroupCollectionEditor.NAppointmentGroupCollectionEditorSchema">
            <summary>
            Schema associated with NAppointmentGroupCollectionEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NGroupingCollectionEditor">
            <summary>
            An editor for schedule view mode groupings.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NGroupingCollectionEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NGroupingCollectionEditor.OnUpdateFromEditedNode">
            <summary>
            Updates the editor from the edited node.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NGroupingCollectionEditor.CreateControl">
            <summary>
            Creates the control, which should edit the current node.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NGroupingCollectionEditor.NGroupingCollectionEditorSchema">
            <summary>
            Schema associated with NGroupingCollectionEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NNotificationPropertyEditor">
            <summary>
            Represents a notification property editor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NNotificationPropertyEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NNotificationPropertyEditor.PopulateTimeSpanBox(Nevron.Nov.UI.NTimeSpanBox)">
            <summary>
            Populates the time span box with predefined time span values.
            </summary>
            <param name="timeSpanBox"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NNotificationPropertyEditor.NNotificationPropertyEditorSchema">
            <summary>
            Schema associated with NNotificationPropertyEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NEndDatePropertyEditor">
            <summary>
            Edits the end date of a recurrence rule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NEndDatePropertyEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NEndDatePropertyEditor.OnDateTimeBoxSelectedDateChanged(Nevron.Nov.Dom.NValueChangeEventArgs)">
            <summary>
            Called when the selected date of the date time box has changed.
            Overriden to change the selected date to the end of the day instead of its start.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NEndDatePropertyEditor.NEndDatePropertyEditorSchema">
            <summary>
            Schema associated with NEndDatePropertyEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor">
            <summary>
            A category editor for monthly based recurrence patterns.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.CreateChildEditorsContainer(Nevron.Nov.DataStructures.NList{Nevron.Nov.Editors.NEditor})">
            <summary>
            Creates the control, which should edit this category.
            </summary>
            <param name="editors"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.CreateAbsoluteRadioButton">
            <summary>
            Creates the absolute radio button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.CreateRelativeRadioButton">
            <summary>
            Creates the relative radio button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.CreateDayInMonthUpDown">
            <summary>
            Creates the day in month up down.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.CreateIntervalUpDown">
            <summary>
            Creates the interval up down.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.CreateDayOrdinalCombo">
            <summary>
            Creates the day ordinal combo box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.CreateDaysOfWeekDropDown">
            <summary>
            Creates the days of week drop down.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.m_AbsoluteIntervalUpDown">
            <summary>
            The absolute interval drop down.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.m_RelativeIntervalUpDown">
            <summary>
            The relative interval drop down.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.m_bUpdatingFromEditor">
            <summary>
            Indicates whether the value is updating from editor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NMonthlyPatternCategoryEditor.NMonthlyPatternCategoryEditorSchema">
            <summary>
            Schema associated with NMonthlyPatternCategoryEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NRecurrencePatternCategoryEditor">
            <summary>
            Base class for recurrence pattern editors.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NRecurrencePatternCategoryEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NRecurrencePatternCategoryEditor.CreateControl">
            <summary>
            Creates the control, which should edit this editors category.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NRecurrencePatternCategoryEditor.NRecurrencePatternCategoryEditorSchema">
            <summary>
            Schema associated with NRecurrencePatternCategoryEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.Editors.NYearlyPatternCategoryEditor">
            <summary>
            A category editor for yearly based recurrence patterns.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NYearlyPatternCategoryEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NYearlyPatternCategoryEditor.CreateAbsoluteRadioButton">
            <summary>
            Creates the absolute radio button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NYearlyPatternCategoryEditor.CreateRelativeRadioButton">
            <summary>
            Creates the relative radio button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.Editors.NYearlyPatternCategoryEditor.CreateMonthsInYearDropDown">
            <summary>
            Creates the months in year drop down.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.Editors.NYearlyPatternCategoryEditor.NYearlyPatternCategoryEditorSchema">
            <summary>
            Schema associated with NYearlyPatternCategoryEditor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleRibbonBuilder">
            <summary>
            Creates the Nevron Schedule ribbon.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleRibbonBuilder.CreateApplicationMenu">
            <summary>
            Creates the Nevron Schedule ribbon application menu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleRibbonBuilder.AddTabPageBuilders(Nevron.Nov.UI.NCommandBuilderCollection{Nevron.Nov.UI.NRibbonTabPageBuilder})">
            <summary>
            Creates the Nevron Schedule ribbon tab page builders.
            </summary>
            <param name="tabPageBuilders"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleRibbonBuilder.CreateStatusBarBuilder">
            <summary>
            Creates the Nevron Schedule status bar builder.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleRibbonBuilder.TabPageAppointmentName">
            <summary>
            The name of the "Appointment" tab page.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleRibbonBuilder.TabPageHomeName">
            <summary>
            The name of the "Home" tab page.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleRibbonBuilder.TabPageSettingsName">
            <summary>
            The name of the "Settings" tab page.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleContextMenu">
            <summary>
            Represents a context menu factory. It is used to construct context menus for the context
            editable schedule elements. An instance of this class can be obtained through the
            NSchedule.ContextMenu property.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleContextMenu.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleContextMenu.OwnerScheduleView">
            <summary>
            Gets the schedule view to which this factory belongs.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleContextMenu.CreateContextWidget(Nevron.Nov.Dom.NElement)">
            <summary>
            Overriden to create the context widget for the specified element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleContextMenu.CreateElementSpecificCommands(Nevron.Nov.UI.NMenu,Nevron.Nov.Dom.NElement)">
            <summary>
            Creates context menu commands for the given element and adds them
            to the specified menu. 
            </summary>
            <param name="menu"></param>
            <param name="element"></param>
            <remarks>The default implementation of this method checks whether the given
            object implements the INAppendContextMenuItems interface and if it does,
            calls its AppendContextMenuItems method.</remarks>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleContextMenu.CreateCustomCommands(Nevron.Nov.UI.NMenu)">
            <summary>
            When overriden in a derived class, creates custom context menu commands.
            The default implementation does not create any custom commands.
            </summary>
            <param name="menu"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleContextMenu.NScheduleContextMenuSchema">
            <summary>
            Schema associated with NScheduleContextMenu.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleView">
            <summary>
            A widget, which shows a schedule document and lets you add, create and modify its appointments.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleView.Navigator">
            <summary>
            Gets/Sets the navigator of this schedule view.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleView.HScrollBar">
            <summary>
            Gets the horizontal scroll bar.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleView.VScrollBar">
            <summary>
            Gets the vertical scroll bar.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleView.ContextMenu">
            <summary>
            Gets/Sets the context menu factory of the schedule view.
            If set to null, context menu will not be displayed.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleView.NotificationCheckInterval">
            <summary>
            Gets/Sets the interval (in seconds) at which to check for notifications.
            By default set to 0, which means that the schedule will not check for and
            show any notifications.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.VisitChildDisplaySubtree(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.Dom.NVisual)">
            <summary>
            Called to propagate the display traversal to the node children.
            </summary>
            <param name="visitor"></param>
            <param name="child"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ScrollInDirection(Nevron.Nov.Graphics.ENCompassDirection,System.Double)">
            <summary>
            Scrolls the active page in the specified direction, with the specified number of steps.
            </summary>
            <param name="direction"></param>
            <param name="steps"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ShowPreviousViewRange">
            <summary>
            Shows the previous range of this schedule view.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ShowNextViewRange">
            <summary>
            Shows the next view range of this schedule view.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ImportAppointments">
            <summary>
            Show an Open File Dialog for selecting a schedule document and imports the appointments
            of the selected document into the current one.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ImportAppointmentsFromFile(Nevron.Nov.IO.NFile)">
            <summary>
            Imports the appointments from the given file.
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ImportAppointmentsFromStream(System.IO.Stream)">
            <summary>
            Imports the appointments from the given stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ImportAppointmentsFromDocument(Nevron.Nov.Schedule.NScheduleDocument)">
            <summary>
            Imports the appointments from the given schedule document.
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.CreateNewDocument">
            <summary>
            Creates a new document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.AccumulateContentDisplayChildren(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.DataStructures.NList{Nevron.Nov.Dom.NVisual})">
            <summary>
            Accumulates the display children of the node that are considered to be content.
            </summary>
            <param name="visitor"></param>
            <param name="list"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.AccumulateInnerAddorners(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.DataStructures.NList{Nevron.Nov.Dom.NVisual})">
            <summary>
            Accumulates the inner adorners.
            </summary>
            <param name="visitor"></param>
            <param name="list"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetRightSideAdorner">
            <summary>
            Gets the right side adorner.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetBottomSideAdorner">
            <summary>
            Gets the bottom side adorner.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Overriden to layout the content and the scrollbars.
            </summary>
            <param name="ca"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.MeasureAdorner(Nevron.Nov.Graphics.ENCompassDirection,Nevron.Nov.UI.NWidget)">
            <summary>
            Measures the given adorner.
            </summary>
            <param name="compassDirection"></param>
            <param name="adorner"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetInnerAdornersArea(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Given the content area for arrangement, returns the area in which inner addorners must be arranged.
            This implementation simply returns the content area.
            </summary>
            <param name="contentArea"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetViewportOrigin">
            <summary>
            Gets the viewport origin.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.SetViewportOrigin(Nevron.Nov.Graphics.NPoint)">
            <summary>
            
            </summary>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetTotalViewport">
            <summary>
            Gets the total viewport bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetHScrollBar">
            <summary>
            Gets the horizontal scrollbar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetVScrollBar">
            <summary>
            Gets the vertical scrollbar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetHScrollMode">
            <summary>
            Gets the horizontal scrolling policy.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetVScrollMode">
            <summary>
            Gets the vertical scrolling policy.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetNoScrollHAlign">
            <summary>
            Gets the horizontal alignment of the viewport relative to the window in case there is no horizontal scrollbar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetNoScrollVAlign">
            <summary>
            Gets the vertical alignment of the viewport relative to the window in case there is no horizontal scrollbar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetZoomFactor">
            <summary>
            Gets the viewport zoom factor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.SetZoomFactor(System.Double)">
            <summary>
            Sets the viewport zoom factor.
            </summary>
            <param name="factor"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.GetZoomMode">
            <summary>
            Get the zoom policy which defines the way in which the viewport is scaled to the window
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ComputeWindowSize(Nevron.Nov.Graphics.NRectangle,System.Boolean,System.Boolean)">
            <summary>
            Computes the size of the viewport taking into account the specified H and V srollbars visibility.
            </summary>
            <param name="ca"></param>
            <param name="showHScrollBar"></param>
            <param name="showVScrollBar"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.BuildCommander(Nevron.Nov.UI.NCommander)">
            <summary>
            Builds the drawing commander, by adding the drawing command actions
            </summary>
            <param name="commander"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.BuildInteractor(Nevron.Nov.UI.NInteractor)">
            <summary>
            Builds the schedule interactor by adding the schedule tools.
            </summary>
            <param name="interactor"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.OnDocumentChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Document property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.OnRegistered">
            <summary>
            Called after the document node is registered in its owner document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.OnUnregistered">
            <summary>
            Called after the document node is unregistered from its owner document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.OnPostPaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element post-children custom paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.OnNotificationCheckIntervalChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the NotificationCheckInterval property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleView.ShowNotification(Nevron.Nov.DataStructures.NList{Nevron.Nov.Schedule.NAppointmentBase})">
            <summary>
            Shows a notification for the given appointments.
            </summary>
            <param name="appointments"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleView.NScheduleViewSchema">
            <summary>
            Schema associated with NScheduleView.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleView.NavigatorChild">
            <summary>
            Reference to the Navigator child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleView.HScrollBarChild">
            <summary>
            Reference to the HScrollBar child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleView.VScrollBarChild">
            <summary>
            Reference to the VScrollBar child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleView.ContextMenuProperty">
            <summary>
            Reference to the ContextMenu property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleView.NotificationCheckIntervalProperty">
            <summary>
            Reference to the NotificationCheckInterval property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleViewNavigator">
            <summary>
            A widget that navigates backward and forward a schedule view.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewNavigator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewNavigator.OnParentChanged(Nevron.Nov.Dom.NNode)">
            <summary>
            Updates any references or cache related to the context of the node parent.
            </summary>
            <remarks>
            Overriden to cache a reference to the owner schedule view.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewNavigator.GetDateRangeString(System.DateTime,System.DateTime)">
            <summary>
            Gets the string representation of the given date range.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewNavigator.OnQueryCommandTarget(Nevron.Nov.UI.NQueryCommandTargetEventArgs)">
            <summary>
            Called when a command target is requested.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleViewNavigator.NScheduleViewNavigatorSchema">
            <summary>
            Schema associated with NScheduleViewNavigator.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleViewWithCommandBars">
            <summary>
            A schedule view with command bars.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewWithCommandBars.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewWithCommandBars.CreateUIBuilder">
            <summary>
            Creates the schedule command bars builder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewWithCommandBars.CreateView">
            <summary>
            Creates the schedule view.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleViewWithCommandBars.NScheduleViewWithCommandBarsSchema">
            <summary>
            Schema associated with NScheduleViewWithCommandBars.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleViewWithRibbon">
            <summary>
            A schedule view with ribbon.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewWithRibbon.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewWithRibbon.CreateUIBuilder">
            <summary>
            Creates the schedule ribbon builder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleViewWithRibbon.CreateView">
            <summary>
            Creates the schedule view.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleViewWithRibbon.NScheduleViewWithRibbonSchema">
            <summary>
            Schema associated with NScheduleViewWithRibbon.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentEditTool">
            <summary>
            A schedule tool, which creates or edits an appointment.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentEditTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentEditTool.CanExecute(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Determines whether the tool can execute.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentEditTool.Execute(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Executes the action of this tool.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentEditTool.CreateAppointmentForGridCell(Nevron.Nov.Schedule.NScheduleGridCell)">
            <summary>
            Creates an appointment for the given schedule grid cell.
            </summary>
            <param name="gridCell"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentEditTool.NAppointmentEditToolSchema">
            <summary>
            Schema associated with NAppointmentEditTool.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleClickSelectTool">
            <summary>
            Performs the click select functionality of the schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClickSelectTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClickSelectTool.Execute(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Performs a click select.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleClickSelectTool.NScheduleClickSelectToolSchema">
            <summary>
            Schema associated with NScheduleClickSelectTool.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleClickTool">
            <summary>
            A schedule tool, which reacts on mouse click events.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClickTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleClickTool.MouseButtonEvent">
            <summary>
            Gets/Sets the mouse button event on which the tool performs its action.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClickTool.OnMouseDown(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Processes the mouse down event. Overriden to perform click select, if it can be performed.
            </summary>
            <param name="args"></param> 
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClickTool.OnMouseUp(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Processes the mouse down event. Overriden to perform click select if it can be performed.
            </summary>
            <param name="args"></param> 
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClickTool.CanExecute(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Determines whether the action of this tool can be executed.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleClickTool.Execute(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Executes the tool's action.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleClickTool.NScheduleClickToolSchema">
            <summary>
            Schema associated with NScheduleClickTool.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleClickTool.MouseButtonEventProperty">
            <summary>
            Reference to the ClickSelectMouseButtonEvent property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentHighlightTool">
            <summary>
            Highlights an appointment when the mouse pointer is above it.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentHighlightTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentHighlightTool.OnMouseEnter(Nevron.Nov.UI.NMouseOverChangeEventArgs)">
            <summary>
            Called when the mouse pointer enters a node.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentHighlightTool.OnMouseLeave(Nevron.Nov.UI.NMouseOverChangeEventArgs)">
            <summary>
            Called when the mouse pointer leaves a node.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentHighlightTool.OnHighlighted(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Called when an appoinment has been highlighted.
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentHighlightTool.OnUnhighlighted(Nevron.Nov.Schedule.NAppointmentBase)">
            <summary>
            Called when an appointment has been unhighlighted.
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentHighlightTool.NAppointmentHighlightToolSchema">
            <summary>
            Schema associated with NAppointmentHighlightTool.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentMoveTool">
            <summary>
            A schedule drag tool, which moves the selected appointments. 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentMoveTool.StartMoveDistance">
            <summary>
            Gets/Sets the move distance at which the tool is activated.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Processes the mouse move event.
            </summary>
            <remarks>
            Overriden to call the Drag handle method if the tool is active.
            If the tool is not active it will try to obtain the last hit handle and request its cursor and tooltip.
            </remarks>
            <param name="args">mouse event arguments</param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.CanActivate(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Determines whether the tool can activate itself in response to the given
            mouse button event args.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.OnActivated">
            <summary>
            Called when the tool was activated.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.OnDeactivated">
            <summary>
            Called when the tool was deactivated. Raises the Deactivated event.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.OnAborted">
            <summary>
            Called when the tool was aborted. Raises the Aborted event
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.MoveSelectedItems(Nevron.Nov.Graphics.NPoint,Nevron.Nov.Graphics.NPoint,System.Boolean)">
            <summary>
            Moves the preview of the selected items to the position specified by dragPos.
            If preview is not created, it is created if the mustCreatePreview is true,
            or the mouse has moved a certain amount from the tool activation position.
            Finally if the preview is created, it is started with the location specified by startPos parameter.
            </summary>
            <param name="dragPos">Position to move preview to (in schedule coordinates).</param>
            <param name="startPos">Position to start preview from (in schedule coordinates).</param>
            <param name="mustCreatePreview"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.StartDragAndDrop">
            <summary>
            Starts the drag and drop.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.OnDragEnded(Nevron.Nov.UI.NDragEndedEventArgs)">
            <summary>
            
            </summary>
            <param name="dragEndedArgs"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.OnQueryDragAction(Nevron.Nov.UI.NQueryDragActionEventArgs)">
            <summary>
            
            </summary>
            <param name="queryDragActionArgs"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentMoveTool.GetActiveCursorAndTooltip(Nevron.Nov.UI.NCursor@,Nevron.Nov.UI.NTooltip@)">
            <summary>
            Gets the cursor and tooltip that the tool requests when active.
            </summary>
            <param name="cursor"></param>
            <param name="tooltip"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentMoveTool.NAppointmentMoveToolSchema">
            <summary>
            Schema associated with NAppointmentMoveTool.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentMoveTool.StartMoveDistanceProperty">
            <summary>
            Reference to the StartMoveDistance property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentResizeTool">
            <summary>
            A schedule drag tool, which resizes an appointment.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentResizeTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentResizeTool.SideDistance">
            <summary>
            Gets/Sets the maximum distance a point should be from the side of an appointment widget
            in order to activate this tool. By default set to 10 dips.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentResizeTool.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Processes the mouse move event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentResizeTool.CanActivate(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Determines whether the tool can activate itself in response to the given
            mouse button event args.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentResizeTool.OnActivated">
            <summary>
            Called when the tool was activated.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentResizeTool.OnDeactivated">
            <summary>
            Called when the tool was deactivated. Raises the Deactivated event.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentResizeTool.OnAborted">
            <summary>
            Called when the tool was aborted. Raises the Aborted event
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentResizeTool.GetActiveCursorAndTooltip(Nevron.Nov.UI.NCursor@,Nevron.Nov.UI.NTooltip@)">
            <summary>
            Gets the cursor and tooltip that the tool requests when active
            </summary>
            <param name="cursor"></param>
            <param name="tooltip"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentResizeTool.GetReadyCursorAndTooltip(Nevron.Nov.UI.NCursor@,Nevron.Nov.UI.NTooltip@)">
            <summary>
            Gets the cursor and tooltip that the tool requests when not active.
            </summary>
            <param name="cursor"></param>
            <param name="toolTip"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentResizeTool.ResizeSelectedItem(Nevron.Nov.Graphics.NPoint,Nevron.Nov.Graphics.NPoint,System.Boolean)">
            <summary>
            Resizes the preview of the selected item to the position specified by dragPos.
            If preview is not created, it is created if the mustCreatePreview is true,
            or the mouse has moved a certain amount from the tool activation position.
            Finally if the preview is created, it is started with the location specified by startPos parameter.
            </summary>
            <param name="dragPos">Position to resize preview to (in schedule coordinates).</param>
            <param name="startPos">Position to start preview from (in schedule coordinates).</param>
            <param name="mustCreatePreview"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentResizeTool.NAppointmentResizeToolSchema">
            <summary>
            Schema associated with NAppointmentResizeTool.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentResizeTool.SideDistanceProperty">
            <summary>
            Reference to the SideDistance property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NContextMenuTool">
            <summary>
            The NContextMenuTool shows a context menu for the items below the mouse pointer.
            The context menu that is displayed is controlled by the NScheduleView.ContextMenu attribute.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NContextMenuTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NContextMenuTool.MouseButtonEvent">
            <summary>
            Gets or sets the mouse button event on which the context menu is shown.
            By default set to ENMouseButtonEvent.RightButtonUp.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NContextMenuTool.OnMouseDown(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Processes the mouse down event. Overriden to perform click select, if it can be performed
            </summary>
            <param name="args"></param> 
        </member>
        <member name="M:Nevron.Nov.Schedule.NContextMenuTool.OnMouseUp(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Processes the mouse down event. Overriden to perform click select if it can be performed and 
            perform drill down select if it can be performed.
            </summary>
            <param name="args"></param> 
        </member>
        <member name="M:Nevron.Nov.Schedule.NContextMenuTool.CanShowContextMenu(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Determines whether context menu can be shown in response to the specified mouse event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NContextMenuTool.ShowContextMenu(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Shows the context menu.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NContextMenuTool.NContextMenuToolSchema">
            <summary>
            Schema associated with NContextMenuTool.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NContextMenuTool.MouseButtonEventProperty">
            <summary>
            Reference to the MouseButtonEventProperty property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleDragTool">
            <summary>
            Base class of all tools that handle drag and drop of schedule elements.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDragTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleDragTool.ScheduleView">
            <summary>
            Gets a reference to the schedule view this tool belongs to.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleDragTool.Schedule">
            <summary>
            Gets the schedule of the schedule view, which owns this tool.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleDragTool.ScheduleViewReadOnly">
            <summary>
            Gets whether the schedule view is read only.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleDragTool.StartPosition">
            <summary>
            Gets the mouse start position in schedule coordinates.
            Valid only when the tool is active.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDragTool.CanActivate(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Determines whether the tool can activate itself in response to the given
            mouse button event args.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDragTool.OnActivated">
            <summary>
            Called when the tool is activated.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDragTool.OnDeactivated">
            <summary>
            Called when the tool is deactivated.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDragTool.OnAborted">
            <summary>
            Called when the tool is aborted.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDragTool.UpdateCursorAndTooltip">
            <summary>
            Requests cursor and tooltip depending on the tool state.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDragTool.OperatesInScheduleGridArea">
            <summary>
            Determines whether the tool operates in the schedule area.
            This implementation returns true.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleDragTool.GetScheduleGridArea">
            <summary>
            Gets the area of the schedule.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleDragTool.NScheduleDragToolSchema">
            <summary>
            Schema associated with NScheduleDragTool.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScheduleTool">
            <summary>
            Base class for schedule view tools.
            </summary>
            <remarks>
            Tools, which derive from this class can obtain a reference to the schedule view
            hosting them by the OwnerScheduleView property.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScheduleTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleTool.ScheduleView">
            <summary>
            Gets a reference to the schedule view this tool belongs to.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleTool.Schedule">
            <summary>
            Gets the schedule of the schedule view, which owns this tool.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleTool.ScheduleViewReadOnly">
            <summary>
            Gets whether the schedule view is read only.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NScheduleTool.ScheduleEnabled">
            <summary>
            Gets whether the schedule and its owner schedule view are enabled.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScheduleTool.NScheduleToolSchema">
            <summary>
            Schema associated with NScheduleTool.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NScrollAndZoomTool">
            <summary>
            A tool, which implements mouse wheel scrolling and zooming of a schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScrollAndZoomTool.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScrollAndZoomTool.DoScrollInDirection(Nevron.Nov.Graphics.ENCompassDirection,System.Double)">
            <summary>
            Scrolls the schedule view in the given direction.
            </summary>
            <param name="dir"></param>
            <param name="steps"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScrollAndZoomTool.DoZoomIn">
            <summary>
            Zooms in the schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScrollAndZoomTool.DoZoomOut">
            <summary>
            Zooms out the schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScrollAndZoomTool.DoZoomIn(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Zooms in the schedule around the given pin point.
            </summary>
            <param name="pin"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NScrollAndZoomTool.DoZoomOut(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Zooms out the schedule around the given pin point.
            </summary>
            <param name="pin"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NScrollAndZoomTool.NScrollAndZoomToolSchema">
            <summary>
            Schema associated with NScrollAndZoomTool.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentWidget">
            <summary>
            A widget that represents an appointment or a part of a multi-day appointment in a schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentWidget.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Schedule.NAppointmentWidget.Appointment">
            <summary>
            Gets the appointment this widget represents.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentWidget.AppendContextMenuItems(Nevron.Nov.UI.NMenu,System.Boolean)">
            <summary>
            Appends context menu items to the given menu.
            </summary>
            <param name="menu"></param>
            <param name="readOnly"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentWidget.RequestTooltip">
            <summary>
            Called when the input element receive a chance to request a tooltip.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentWidget.CreateContent">
            <summary>
            Creates the content of this appointment widget.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentWidget.OnAppointmentSubjectChanged(System.String,System.String)">
            <summary>
            Called when the subject of the owner appointment has changed.
            </summary>
            <param name="oldSubject"></param>
            <param name="newSubject"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentWidget.OnAppointmentDescriptionChanged(System.String,System.String)">
            <summary>
            Called when the description of the owner appointment has changed.
            </summary>
            <param name="oldDescription"></param>
            <param name="newDescription"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentWidget.NAppointmentWidgetSchema">
            <summary>
            Schema associated with NAppointmentWidget.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentWidgetCollection">
            <summary>
            A collection of appointment widgets, which are typically created by
            the appointments of a schedule.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentWidgetCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentWidgetCollection.NAppointmentWidgetCollectionSchema">
            <summary>
            Schema associated with NAppointmentWidgetCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NAppointmentWidgetHeader">
            <summary>
            Represents the header of an appointment widget.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NAppointmentWidgetHeader.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NAppointmentWidgetHeader.NAppointmentWidgetHeaderSchema">
            <summary>
            Schema associated with NAppointmentWidgetHeader.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTagComboBox">
            <summary>
            A combo box for selecting an appointment tag.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagComboBox.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagComboBox.FillFromCollection``1(Nevron.Nov.DataStructures.INCollection{``0})">
            <summary>
            Fills the combo box from the given appointment tag collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tags"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTagComboBox.NTagComboBoxSchema">
            <summary>
            Schema associated with NTagComboBox.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTagItemHeader">
            <summary>
            Represents the header of a tag split button menu item.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagItemHeader.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTagItemHeader.NTagItemHeaderSchema">
            <summary>
            Schema associated with NTagItemHeader.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTagSplitButton">
            <summary>
            A split button for selecting an appointment tag.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagSplitButton.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagSplitButton.#ctor(System.String)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="initialActionButtonText"></param>
        </member>
        <member name="P:Nevron.Nov.Schedule.NTagSplitButton.InitialActionButtonText">
            <summary>
            Gets/Sets the initial text of the action button.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagSplitButton.FillFromCollection``1(Nevron.Nov.DataStructures.INCollection{``0})">
            <summary>
            Fills this menu split button's menu from the given appointment tag collection.
            </summary>
            <param name="tags"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagSplitButton.MeasureItem(System.Boolean)">
            <summary>
            Measures the item slot.
            </summary>
            <param name="defaultMeasure"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagSplitButton.CreateActionButtonContent(Nevron.Nov.UI.NMenuItem)">
            <summary>
            Creates the content of the action button for the given menu item.
            </summary>
            <param name="menuItem"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTagSplitButton.NTagSplitButtonSchema">
            <summary>
            Schema associated with NTagSplitButton.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTagSplitButton.InitialActionButtonTextProperty">
            <summary>
            Reference to the InitialActionButtonText property.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Schedule.NTagSplitButtonCommandSource">
            <summary>
            Command source associated with tag split buttons.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagSplitButtonCommandSource.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagSplitButtonCommandSource.#ctor(Nevron.Nov.UI.NCommand)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Nevron.Nov.Schedule.NTagSplitButtonCommandSource.UpdateOwnerElementCore(Nevron.Nov.UI.NUpdateCommandSourceEventArgs)">
            <summary>
            Overriden to update the command source element.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:Nevron.Nov.Schedule.NTagSplitButtonCommandSource.NTagSplitButtonCommandSourceSchema">
            <summary>
            Schema associated with NTagSplitButtonCommandSource.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Internal.MxSG.ToString">
            <summary>
            Converts the value of this instance to string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.hbtG.Parse(System.Char[],System.Int32,System.Int32)">
            <summary>
            Parses the given characters and returns true on success.
            </summary>
            <param name="jbtG"></param>
            <param name="KbtG"></param>
            <param name="lbtG"></param>
            <returns></returns>
        </member>
        <member name="P:Nevron.Nov.Internal.vrSG.Name">
            <summary>
            Gets the name of the format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.vrSG.Extensions">
            <summary>
            Gets the extnesion of the format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.vrSG.FileSignature">
            <summary>
            Gets the file signature of this document format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.vrSG.Mime">
            <summary>
            Gets the mime type.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.hSSG.Name">
            <summary>
            Gets the name of the format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.hSSG.Extensions">
            <summary>
            Gets the extnesion of the format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.hSSG.FileSignature">
            <summary>
            Gets the file signature of this document format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.hSSG.Mime">
            <summary>
            Gets the mime type 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Internal.hntG.CompareTo(System.Object)">
            <summary>
            Compares this appointment body to the given one by start and end time.
            </summary>
            <param name="KntG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.hntG.CompareTo(Nevron.Nov.Internal.hntG)">
            <summary>
            Compares this appointment body to the given one by start and end time.
            </summary>
            <param name="lntG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.SntG.UpdateBody2DFromObject(System.Object,Nevron.Nov.Layout.NBody2D)">
            <summary>
            Updates the given body from the specified object.
            </summary>
            <param name="UntG"></param>
            <param name="vntG"></param>
        </member>
        <member name="M:Nevron.Nov.Internal.SntG.TryGetBody2DProperty(System.Object,System.Int32,System.Object@)">
            <summary>
            Reads a property of a 2D body
            </summary>
            <param name="WntG"></param>
            <param name="xntG"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.SntG.UpdateObjectFromBody2D(System.Object,Nevron.Nov.Layout.NBody2D)">
            <summary>
            Updates an object from the specified 2D body.
            </summary>
            <param name="YntG"></param>
            <param name="AOtG"></param>
            <returns></returns>
        </member>
        <member name="P:Nevron.Nov.Internal.EOtG.Item(System.Int32,System.Int32)">
            <summary>
            Gets/Sets the appointment body at the specified address inthe grid.
            </summary>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Nevron.Nov.Internal.GptG.Item(System.Int32)">
            <summary>
            Gets the appointment body at the given cell index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.rptG.ArrangeBoxes(Nevron.Nov.Layout.NBoxBodyList,Nevron.Nov.Layout.NLayoutContext)">
            <summary>
            Arranges the given bodies.
            </summary>
            <param name="SptG"></param>
            <param name="tptG"></param>
        </member>
        <member name="M:Nevron.Nov.Internal.rptG.CreateBoxBody">
            <summary>
            Creates an appointment body.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.UptG.MeasureBoxes(Nevron.Nov.Layout.NBoxBodyList,Nevron.Nov.Layout.NLayoutContext)">
            <summary>
            Returns NSize.Zero, because the appointment layout does not have desired size,
            but rather fits a set of appointments to a given area.
            </summary>
            <param name="AQtG"></param>
            <param name="bQtG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.UptG.ArrangeBoxes(Nevron.Nov.Layout.NBoxBodyList,Nevron.Nov.Layout.NLayoutContext)">
            <summary>
            Layouts the boxes.
            </summary>
            <param name="CQtG"></param>
            <param name="dQtG"></param>
        </member>
        <member name="M:Nevron.Nov.Internal.UptG.CreateBoxBody">
            <summary>
            Creates an appointment body.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
